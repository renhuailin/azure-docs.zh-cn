### YamlMime:FAQ
metadata:
  title: 有关 Azure Cosmos DB 时间点还原功能的常见问题解答。
  description: 本文列出了有关使用连续备份模式实现的 Azure Cosmos DB 时间点还原功能的常见问题解答。
  author: kanshiG
  ms.service: cosmos-db
  ms.topic: conceptual
  ms.date: 07/29/2021
  ms.author: govindk
  ms.reviewer: sngun
  ms.openlocfilehash: 573a6c65de43a75ff3343a41cf64027a78663cda
  ms.sourcegitcommit: 0046757af1da267fc2f0e88617c633524883795f
  ms.translationtype: HT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 08/13/2021
  ms.locfileid: "121733186"
title: 有关 Azure Cosmos DB 时间点还原功能的常见问题
summary: >
  [!INCLUDE[appliesto-sql-mongodb-api](includes/appliesto-sql-mongodb-api.md)]


  本文列出了使用连续备份模式实现的 Azure Cosmos DB 时间点还原功能的常见问题。
sections:
- name: 忽略
  questions:
  - question: >
      How much time does it takes to restore?
    answer: >
      The restore duration dependents on the size of your data.
  - question: >
      Can I submit the restore time in local time?
    answer: >
      The restore may not happen depending on whether the key resources like databases or containers existed at that time. You can verify by entering the time and looking at the selected database or container for a given time. If you see no resources exist to restore, then the restore process doesn't work.
  - question: >
      How can I track if an account is being restored?
    answer: "After you submit the restore command, and wait on the same page, after the operation is complete, the status bar shows successfully restored account message. You can also search for the restored account and [track the status of account being restored](restore-account-continuous-backup.md#track-restore-status). While restore is in progress, the status of the account will be *Creating*, after the restore operation completes, the account status will change to *Online*.\n\nSimilarly for PowerShell and CLI, you can track the progress of restore operation by executing `az cosmosdb show` command as follows:\n\n```azurecli-interactive\naz cosmosdb show --name \"accountName\" --resource-group \"resourceGroup\"\n```\n\nThe provisioningState shows *Succeeded* when the account is online.\n\n```json\n{\n\"virtualNetworkRules\": [],\n\"writeLocations\" : [\n{\n    \"documentEndpoint\": \"https://<accountname>.documents.azure.com:443/\", \n    \"failoverpriority\": 0,\n    \"id\": \"accountName\" ,\n    \"isZoneRedundant\" : false, \n    \"locationName\": \"West US 2\", \n    \"provisioningState\": \"Succeeded\"\n}\n]\n}\n```\n"
  - question: >
      How can I find out whether an account was restored from another account?
    answer: >
      Run the `az cosmosdb show` command, in the output, you can see that the value of `createMode` property. If the value is set to **Restore**. it indicates that the account was restored from another account. The `restoreParameters` property has further details such as `restoreSource`, which has the source account ID. The last GUID in the `restoreSource` parameter is the instanceId of the source account.


      For example, in the following output, the source account's instance ID is *7b4bb-f6a0-430e-ade1-638d781830cc*


      ```json

      "restoreParameters": {
         "databasesToRestore" : [],
         "restoreMode": "PointInTime",
         "restoreSource": "/subscriptions/2a5b-f6a0-430e-ade1-638d781830dd/providers/Microsoft.DocumentDB/locations/westus/restorableDatabaseAccounts/7b4bb-f6a0-430e-ade1-638d781830cc",
         "restoreTimestampInUtc": "2020-06-11T22:05:09Z"
      }

      ```
  - question: >
      What happens when I restore a shared throughput database or a container within a shared throughput database?
    answer: >
      The entire shared throughput database is restored. You cannot choose a subset of containers in a shared throughput database for restore.
  - question: >
      What is the use of InstanceID in the account definition?
    answer: "At any given point in time, Azure Cosmos DB account's `accountName` property is globally unique while it is alive. However, after the account is deleted, it is possible to create another account with the same name and hence the \"accountName\" is no longer enough to identify an instance of an account. \n\nID or the `instanceId` is a property of an instance of an account and it is used to disambiguate across multiple accounts (live and deleted) if they have same name for restore. You can get the instance ID by running the `Get-AzCosmosDBRestorableDatabaseAccount` or  `az cosmosdb restorable-database-account` commands. The name attribute value denotes the \"InstanceID\".\n"
  - question: >
      Is backup and restore supported for Azure Synapse Link enabled accounts?
    answer: "\nYes. However, analytical store data isn't included in backups and restores. When Synapse Link is enabled on a database account, Azure Cosmos DB will continue to automatically take backups of your data in the transactional store at scheduled backup interval, as always.\n"
  - question: >
      Is backup and restore supported for analytical store enabled containers?
    answer: "\nYes, but only for the regular transactional data. Automatic backup and restore of your data in the analytical store is not supported at this time.\n"
additionalContent: "\n## Next steps\n\n* What is [continuous backup](continuous-backup-restore-introduction.md) mode?\n* Provision an account with continuous backup using [Azure portal](provision-account-continuous-backup.md#provision-portal), [PowerShell](provision-account-continuous-backup.md#provision-powershell), [CLI](provision-account-continuous-backup.md#provision-cli), or [Azure Resource Manager](provision-account-continuous-backup.md#provision-arm-template).\n* [Manage permissions](continuous-backup-restore-permissions.md) required to restore data with continuous backup mode.\n* [Resource model of continuous backup mode](continuous-backup-restore-resource-model.md)"
