### YamlMime:FAQ
metadata:
  title: Azure Monitor 常见问题解答 | Microsoft Docs
  description: 有关 Azure Monitor 常见问题的解答。
  services: azure-monitor
  ms.topic: article
  ms.service: azure-monitor
  author: bwren
  ms.author: bwren
  ms.date: 10/08/2020
  ms.openlocfilehash: b3f18899eada6773fb8d2d78d7635bb47fa79d64
  ms.sourcegitcommit: 613789059b275cfae44f2a983906cca06a8706ad
  ms.translationtype: HT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 09/29/2021
  ms.locfileid: "129278854"
title: Azure Monitor 常见问题解答
summary: >
  这份 Microsoft 常见问题解答列出了 Azure Monitor 的常见问题。 如果有任何其他问题，请转到[论坛](/answers/questions/topics/single/24223.html)并发布问题。 当某个问题经常被问到时，我们会将该问题添加到本文中，以便可以轻松快捷地找到该问题。
sections:
- name: 常规
  questions:
  - question: >
      说明是 Azure Monitor？
    answer: >
      [Azure Monitor](overview.md) 是 Azure 中的一项服务，可通过它监视 Azure、其他云环境或本地中应用程序和服务的性能和可用性。 Azure Monitor 将多个源中的数据收集到一个公共数据平台，你可在这里分析趋势和异常。 Azure Monitor 中的丰富功能可帮助你快速确定和应对可能会影响你的应用程序的关键情况。
  - question: >
      Azure Monitor、Log Analytics 和 Application Insights 之间有何区别？
    answer: >
      2018 年 9 月，Microsoft 将 Azure Monitor、Log Analytics 和 Application Insights 合并到单个服务中，以便对应用程序及其依赖的组件提供强大的端到端监视功能。 Log Analytics 和 Application Insights 中的功能保持不变，但一些功能已更名为 Azure Monitor，目的是更好地反映其新范围。 Log Analytics 的日志数据引擎和查询语言现在称为 Azure Monitor 日志。 请参阅 [Azure Monitor 术语更新](terminology.md)。
  - question: >
      Azure Monitor 的费用是多少？
    answer: >
      自动启用的 Azure Monitor 功能（如收集指标和活动日志）免费提供。 存在与其他功能（例如日志查询和警报）相关的费用。 有关详细定价信息，请参阅 [Azure Monitor 定价页](https://azure.microsoft.com/pricing/details/monitor/)。
  - question: >
      如何启用 Azure Monitor？
    answer: >
      在你创建新的 Azure 订阅时就会启用 Azure Monitor，并自动收集[活动日志](./essentials/platform-logs-overview.md)和平台[指标](essentials/data-platform-metrics.md)。 创建[诊断设置](essentials/diagnostic-settings.md)可收集有关 Azure 资源操作的更多详细信息，添加[监视解决方案](insights/solutions.md)和[见解](./monitor-reference.md)可为特定服务收集的收集数据提供额外的分析。
  - question: >
      如何访问 Azure Monitor？
    answer: >
      可通过 Azure 门户中的“监视”菜单访问各项 Azure Monitor 功能和数据。 通过不同 Azure 服务的菜单的“监视”部分，可访问相同的工具，其中数据经过筛选，指向特定的资源。 也可通过 CLI、PowerShell 和 REST API 针对各种场景来访问 Azure Monitor 数据。
  - question: >
      Azure Monitor 是否有本地版本？
    answer: >
      否。 Azure Monitor 是一种用于处理和存储大量数据的可缩放式云服务，但它可监视本地和其他云中的资源。
  - question: >
      Azure Monitor 能否监视本地资源？
    answer: >
      可以，除了从 Azure 资源收集监视数据以外，Azure Monitor 还可从其他云和本地的虚拟机和应用程序中收集数据。 请参阅 [Azure Monitor 的监视数据源](agents/data-sources.md)。
  - question: >
      Azure Monitor 是否与 System Center Operations Manager 集成？
    answer: >
      可将现有 System Center Operations Manager 管理组连接到 Azure Monitor，从而将来自代理的数据收集到 Azure Monitor 日志中。 这样，你就可使用日志查询和解决方案来分析从代理收集到的数据。 你还可配置现有 System Center Operations Manager 代理，将数据直接发送到 Azure Monitor。 请参阅[将 Operations Manager 连接到 Azure Monitor](agents/om-agents.md)。
  - question: >
      Azure Monitor 使用哪些 IP 地址？
    answer: >
      有关代理和其他外部资源访问 Azure Monitor 所需的 IP 地址和端口的列表，请参阅 [Application Insights 和 Log Analytics 使用的 IP 地址](app/ip-addresses.md)。
- name: 监视数据
  questions:
  - question: >
      Azure Monitor 从何处获取数据？
    answer: >
      Azure Monitor 从各种源（包括来自 Azure 平台的日志和指标，自定义应用程序和在虚拟机上运行的代理）收集数据。 其他服务（例如 Azure 安全中心和网络观察程序）会将数据收集到 Log Analytics 工作区中，以便能够使用 Azure Monitor 数据进行分析。 你也可使用日志或指标的 REST API 将自定义数据发送到 Azure Monitor。 请参阅 [Azure Monitor 的监视数据源](agents/data-sources.md)。
  - question: >
      Azure Monitor 会收集哪些数据？
    answer: >
      Azure Monitor 将来自各种来源的数据收集到[日志](logs/data-platform-logs.md)或[指标](essentials/data-platform-metrics.md)中。 每种数据类型都有自身的相对优点，每种数据都支持 Azure Monitor 中的一组特定功能。 每个 Azure 订阅都有一个指标数据库，可根据需要创建多个 Log Analytics 工作区来收集日志。 请参阅 [Azure Monitor 数据平台](data-platform.md)。
  - question: >
      可在 Azure Monitor 中收集的数据量是否有上限？
    answer: >
      可收集的指标数据量没有限制，但数据的存储时间最长为 93 天。 请参阅[指标保留期](essentials/data-platform-metrics.md#retention-of-metrics)。 可收集的日志数据量没有限制，但可能受到你为 Log Analytics 工作区选择的定价层的影响。 请参阅[定价详细信息](https://azure.microsoft.com/pricing/details/monitor/)。
  - question: >
      如何访问 Azure Monitor 收集的数据？
    answer: >
      见解和解决方案提供了自定义体验，你可以多种方式使用在 Azure Monitor 中存储的数据。 你可通过以 Kusto 查询语言 (KQL) 编写的日志查询直接使用日志数据。 在 Azure 门户中，你可编写和运行查询，并使用 Log Analytics 以交互方式分析数据。 可使用指标资源管理器分析 Azure 门户中的指标。 请参阅[在 Azure Monitor 中分析日志数据](logs/log-query-overview.md)和 [Azure 指标资源管理器入门](essentials/metrics-getting-started.md)。
- name: 解决方案和见解
  questions:
  - question: >
      Azure Monitor 中的见解是指什么？
    answer: >
      见解为特定 Azure 服务提供自定义监视体验。 它们与 Azure Monitor 中的其他功能使用相同的指标和日志，但可能会收集额外的数据，并在 Azure 门户中提供独一无二的体验。 请参阅 [Azure Monitor 中的见解](./monitor-reference.md)。


      要查看 Azure 门户中的见解，请参阅“监视”菜单的“见解”部分或服务菜单的“监视”部分  。
  - question: >
      Azure Monitor 中的解决方案是什么？
    answer: >
      监视解决方案是一组打包的逻辑，用于根据 Azure Monitor 功能监视特定的应用程序或服务。 它们在 Azure Monitor 中收集日志数据，并使用 Azure 门户中的常见体验为其分析提供日志查询和视图。 请参阅 [Azure Monitor 中的监视解决方案](insights/solutions.md)。


      要查看 Azure 门户中的解决方案，请单击“监视”菜单的“见解”部分中的“更多”  。 单击“添加”，将其他解决方案添加到工作区。
- name: 日志
  questions:
  - question: >
      Azure Monitor 日志与 Azure 数据资源管理器之间有何区别？
    answer: >
      Azure 数据资源管理器是一项快速且高度可缩放的数据探索服务，适用于日志和遥测数据。 Azure Monitor 日志是基于 Azure 数据资源管理器构建的，使用相同的 Kusto 查询语言 (KQL)，但有一些细微差别。 请参阅 [Azure Monitor 日志查询语言差异](/azure/data-explorer/kusto/query/)。
  - question: >
      如何检索日志数据？
    answer: >
      可使用以 Kusto 查询语言 (KQL) 编写的日志查询从 Log Analytics 工作区检索所有数据。 你可编写自己的查询，也可使用包含特定应用程序或服务的日志查询的解决方案和见解。 请参阅 [Azure Monitor 中的日志查询概述](logs/log-query-overview.md)。
  - question: >
      能否从 Log Analytics 工作区中删除数据？
    answer: >
      系统会根据数据的[保留期](logs/manage-cost-storage.md#change-the-data-retention-period)从工作区中删除数据。 出于隐私或合规性原因，你可以删除特定数据。 有关详细信息，请参阅[如何导出和删除私人数据](logs/personal-data-mgmt.md#how-to-export-and-delete-private-data)。
  - question: >
      Log Analytics 存储是否不可变？
    answer: >
      数据库存储中的数据在引入后将无法更改，但可以通过[用于删除专用数据的“清除”API 路径](./logs/personal-data-mgmt.md#delete)将其删除。 尽管该数据无法更改，但某些认证要求数据保持不可变且不能在存储中更改或删除。 可以通过使用[数据导出](./logs/logs-data-export.md)将数据导出到配置为[不可变存储](../storage/blobs/immutable-policy-configure-version-scope.md)的存储帐户来实现数据不可变性。
  - question: >
      什么是 Log Analytics 工作区？
    answer: >
      Azure Monitor 收集的所有日志数据都存储在 Log Analytics 工作区中。 工作区实质上是从各种来源收集日志数据的容器。 可为所有监视数据使用一个 Log Analytics 工作区，也可要求使用多个工作区。 请参阅[设计 Azure Monitor 日志部署](logs/design-logs-deployment.md)。
  - question: >
      能否将现有 Log Analytics 工作区移动到另一个 Azure 订阅？
    answer: >
      你可以在资源组或订阅之间移动工作区，但不能移动到其他区域。 请参阅[将 Log Analytics 工作区移动到其他订阅或资源组](logs/move-workspace.md)。
  - question: >
      为什么在 Log Analytics 中看不到“查询资源管理器”按钮和“保存”按钮？
    answer: >
      [查询范围](logs/scope.md)设置为特定资源时，“查询资源管理器”、“保存”和“新建警报规则”按钮不可用  。 若要创建警报并保存或加载查询，Log Analytics 的范围必须设为某个工作区。 若要在工作区上下文中打开 Log Analytics，请选择“Azure Monitor”菜单中的“日志” 。 选择的是上次使用的工作区，但可以选择任何其他的工作区。 请参阅 [Azure Monitor Log Analytics 中的日志查询范围和时间范围](logs/scope.md)
  - question: >
      从 VM 打开 Log Analytics 时，为什么收到“要使此订阅启用此查询，需注册 Microsoft.Insights”错误？
    answer: >
      将自动注册多个资源提供程序，但某些资源提供程序可能需要你手动注册。 注册的作用域始终是订阅。 有关详细信息，请参阅[资源提供程序和类型](../azure-resource-manager/management/resource-providers-and-types.md#azure-portal)。
  - question: >
      从 VM 打开 Log Analytics 时，为何出现无访问权限错误消息？
    answer: >
      若要查看 VM 日志，需获得存储 VM 日志的工作区的读取权限。 在这些示例中，管理员必须在 Azure 中为你授予相关权限。
- name: 指标
  questions:
  - question: >
      指标资源管理器中为什么没有显示 Azure 虚拟机的来宾操作系统中的指标？
    answer: >
      Azure 资源的[平台指标](essentials/monitor-azure-resource.md#monitoring-data)是自动收集的。 但是，你必须执行某些配置才能从虚拟机的来宾操作系统收集指标。 对于 Windows VM，请按照[安装并配置 Windows Azure 诊断扩展 (WAD)](agents/diagnostics-extension-windows-install.md)中所述，安装诊断扩展并配置 Azure Monitor 接收器。 对于 Linux，请按照[使用 InfluxData Telegraf 代理收集 Linux VM 的自定义指标](essentials/collect-custom-metrics-linux-telegraf.md)中所述安装 Telegraf 代理。
- name: 警报
  questions:
  - question: >
      Azure Monitor 中的警报是指什么？
    answer: >
      在监视数据中发现重要情况时，警报会以主动的方式通知你。 有了警报，你就可以在系统的用户注意到问题之前确定和解决这些问题。 有多种类型的警报：


      - 指标 - 指标值超过阈值。

      - 日志查询 - 日志查询的结果与定义的条件匹配。

      - 活动日志 - 活动日志事件与定义的条件匹配。

      - Web 测试 - 可用性测试的结果与定义的条件匹配。


      请参阅 [Microsoft Azure 中的警报概述](alerts/alerts-overview.md)。
  - question: >
      什么是操作组？
    answer: >
      操作组是可以由警报触发的通知和操作的集合。 多个警报可使用一个操作组，这样你就能够使用一组常见的通知和操作。 请参阅[在 Azure 门户中创建和管理器操作组](alerts/action-groups.md)。
  - question: >
      什么是操作规则？
    answer: >
      通过操作规则，可修改匹配特定条件的一组警报的行为。 这样，你便可以在维护时段履行禁用警报操作之类的要求。 你还可将操作组应用于一组警报，而不是将其直接应用于警报规则。 请参阅[操作规则](alerts/alerts-action-rules.md)。
- name: 代理
  questions:
  - question: >
      Azure Monitor 需要代理吗？
    answer: >
      只在从虚拟机中的操作系统和工作负载收集数据时，才需要代理。 虚拟机可位于 Azure、其他云环境或本地。 请参阅 [Azure Monitor 代理的概述](agents/agents-overview.md)。
  - question: >
      Azure Monitor 代理之间有何区别？
    answer: >
      Azure 诊断扩展适用于 Azure 虚拟机，它将数据收集到 Azure Monitor 指标、Azure 存储和 Azure 事件中心。 Log Analytics 代理适用于 Azure 中的虚拟机、其他云环境或本地，它将数据收集到 Azure Monitor 日志。 依赖项代理需要 Log Analytics 代理，还需要所收集的进程详细信息和依赖项。 Azure Monitor 代理是经过改进的新代理，它将随时间推移逐步整合上述所有代理的功能，同时提供集中式数据收集、筛选、多宿主等其他优势。 请参阅 [Azure Monitor 代理的概述](agents/agents-overview.md)。
  - question: >
      代理流量是否使用 ExpressRoute 连接？
    answer: >
      到 Azure Monitor 的流量使用 Microsoft 对等互连 ExpressRoute 线路。 有关不同类型的 ExpressRoute 流量的说明，请参阅 [ExpressRoute 文档](../expressroute/expressroute-faqs.md#supported-services)。
  - question: >
      如何确认 Log Analytics 代理能否与 Azure Monitor 通信？
    answer: >
      在代理计算机上的控制面板中，选择“安全性和设置”>“Microsoft Monitoring Agent”。 在“Azure Log Analytics (OMS)”选项卡下，绿色勾号图标表示代理能够与 Azure Monitor 进行通信。 黄色警告图标表示代理存在问题。 一个常见的原因是 Microsoft Monitoring Agent 服务已停止。 请使用服务控制管理器重启该服务。
  - question: >
      如何停止 Log Analytics 代理与 Azure Monitor 之间的通信？
    answer: >
      对于直接连接到 Log Analytics 的代理，请打开控制面板，然后依次选择“安全性和设置”和“Microsoft Monitoring Agent” 。 在“Azure Log Analytics (OMS)”选项卡下，删除列出的所有工作区。 在 System Center Operations Manager 中，从 Log Analytics 托管的计算机的列表中删除该计算机。 Operations Manager 会更新该代理的配置以便不再向 Log Analytics 进行报告。
  - question: >
      每个代理发送多少数据？
    answer: "每个代理发送的数据量取决于：\n\n* 已启用的解决方案\n* 正在收集的日志和性能计数器的数量\n* 日志中的数据量\n\n有关详细信息，请参阅[使用 Azure Monitor 日志管理使用情况和成本](logs/manage-cost-storage.md)。\n\n对于能够运行 WireData 代理的计算机，可以使用以下查询了解正在发送的数据量：\n\n```kusto\nWireData\n| where ProcessName == \"C:\\\\Program Files\\\\Microsoft Monitoring Agent\\\\Agent\\\\MonitoringHost.exe\"\n| where Direction == \"Outbound\"\n| summarize sum(TotalBytes) by Computer \n```\n"
  - question: >
      将数据发送到 Azure Monitor 时，Microsoft 管理代理 (MMA) 使用多少网络带宽？
    answer: >
      带宽是已发送数据量的一个函数。 数据通过网络发送时会被压缩。
  - question: >
      当 Log Analytics 代理中的数据收集停止时，我如何收到通知？
    answer: >
      当数据收集停止时，可以使用[新建日志警报](alerts/alerts-metric.md)中所述的步骤收到通知。 将以下设置用于警报规则：


      - **定义警报条件**：将 Log Analytics 工作区指定为资源目标。

      - **警报条件**
         - **信号名称**：自定义日志搜索
         - **搜索查询**：`Heartbeat | summarize LastCall = max(TimeGenerated) by Computer | where LastCall < ago(15m)`
         - **警报逻辑**：依据是“结果数”、条件是“大于”、阈值是“0”
         - **计算依据**：“时间(以分钟为单位)”是 30，“频率(以分钟为单位)”是 10
      - **定义警报详细信息**
         - **名称**：数据收集已停止
         - **严重性**：警告

      指定现有或新的[操作组](alerts/action-groups.md)，以便当日志警报匹配条件时，如果检测信号丢失超过 15 分钟，你将收到通知。
  - question: >
      Log Analytics 代理的防火墙要求是什么？
    answer: >
      有关防火墙要求的详细信息，请参阅[网络防火墙要求](agents/log-analytics-agent.md#network-requirements)。
- name: Azure Monitor 代理
  questions:
  - question: >
      从 Log Analytics 代理到 Azure Monitor 代理的升级路径是什么？ 如何迁移？
    answer: >
      请参阅[从 Log Analytics 代理迁移](./agents/azure-monitor-agent-migration.md)
  - question: >
      从 Log Analytics 代理 (MMA) 升级到 Azure Monitor 代理 (AMA) 以监视 System Center Operations Manager 的路径是什么？ 是否可以为 System Center Operations Manager 场景使用 AMA？
    answer: "下文展示了 AMA 如何影响两个与 System Center Operations Manager 相关的监视场景：\n- 场景 1：若要监视 System Center Operations Manager 的 Windows 操作系统，升级路径与任何其他计算机相同，一旦所需的奇偶校验功能在 AMA 上可用，就可以从 MMA（版本 2016、2019）迁移到 AMA。\n- 场景 2：对于将 System Center Operations Manager 载入/连接到 Log Analytics 工作区的场景，由于这是通过适用于 Log Analytics/Azure Monitor 的 System Center Operations Manager 连接器实现的，因此无需在 SCOM 管理服务器上安装 MMA 和 AMA。 因此，从 AMA 的角度来看，此用例没有影响。  \n\n> [!NOTE] \n> 可以使用 MMA 和 AMA 并行运行上述两个场景，没有任何影响。\n"
  - question: >
      新的 Azure Monitor 代理是否支持各种 Log Analytics 解决方案和 Azure 服务（如安全中心、Sentinel 等）的数据收集？
    answer: "查看[预览版当前提供的 AMA 扩展](./agents/azure-monitor-agent-overview.md#supported-services-and-features)列表。 这些是现在可以使用新的 Azure Monitor 代理提供的相同解决方案和服务。 你可能会看到为解决方案/服务安装了其他扩展，这是为了根据解决方案/服务的需要收集其他数据或执行转换/处理，然后使用 AMA 将最终数据路由到 Azure Monitor。 \n\n下面的关系图说明了新的扩展体系结构：\n\n![扩展体系结构](agents/media/azure-monitor-agent/extensibility-arch-new.png)\n"
  - question: >
      新的 Azure Monitor 代理支持哪些 Log Analytics 解决方案？
    answer: >
      请参阅[支持的服务和功能](agents/azure-monitor-agent-overview.md#supported-services-and-features)。
  - question: >
      如何使用新 Azure Monitor 代理收集 Windows 安全事件？
    answer: >
      发送到 Log Analytics 工作区时，可通过两种方法使用新代理收集安全事件：

      - 可以使用 AMA 以本机方式收集安全事件，就如其他 Windows 事件一样。 这些事件将流向 Log Analytics 工作区中的[“Event”](/azure/azure-monitor/reference/tables/Event)表。

      - 如果已在工作区中启用了 Sentinel，则安全事件会改为通过 AMA 流入[“SecurityEvent”](/azure/azure-monitor/reference/tables/SecurityEvent)表（与使用 Log Analytics 代理相同）。 这始终需要首先启用解决方案。
  - question: >
      新的 Azure Monitor 代理和 Log Analytics 代理是否可以共存？
    answer: >
      可以，但有一些注意事项。 在[此处](agents/azure-monitor-agent-overview.md#coexistence-with-other-agents)了解详细信息。
  - question: >
      新的 Azure Monitor 代理是否与现有代理存在奇偶一致性？
    answer: "它与现有代理尚未实现完全奇偶一致性。 下面是一些高级别差距：\n\n- 与 Log Analytics 代理 (MMA/OMS) 相比\n    -   目前并非所有 Log Analytics 解决方案都受支持。 请参阅[支持的内容](agents/azure-monitor-agent-overview.md#supported-services-and-features)\n    -   不支持专用链接 \n    -   不支持收集自定义日志或 IIS 日志\n\n- 与 Azure 诊断扩展 (WAD/LAD) 相比\n    -   不支持事件中心和存储帐户作为目标\n"
  - question: >
      新的 Azure Monitor 代理是否支持非 Azure 环境（其他云、本地环境）？
    answer: >
      现在，只要安装了 Azure Arc 代理，服务器便支持本地计算机和连接到其他云的计算机。 出于运行 AMA 和 DCR 的目的，ARC 要求无需额外付费或资源消耗，因为 ARC 代理仅用于安装机制，不会执行任何操作，除非启用它们
  - question: >
      新 Azure Monitor 代理支持哪些虚拟机？
    answer: "只能在虚拟机、虚拟机规模集和启用了 Arc 的服务器中直接安装它们。 \n"
  - question: >
      我们能否使用事件 ID 筛选事件，即使用新的 Azure Monitor 代理进行更精细的事件筛选？
    answer: "是的。 可以使用 Xpath 查询筛选 Windows 虚拟机上的事件。 [了解详细信息](agents/data-collection-rule-azure-monitor-agent.md#limit-data-collection-with-custom-xpath-queries)  \n对于性能计数器，可以指定要收集的特定计数器，并排除不需要的计数器。\n对于 Linux 上的 syslog，可以选择要收集的“设施”和每个设施的“日志级别”。\n"
  - question: >
      新 Azure Monitor 代理是否支持将数据发送到 EventHubs 和 Azure 存储帐户？
    answer: >
      目前尚不支持，但新代理和数据收集规则将支持在以后将数据发送到事件中心和 Azure 存储帐户。 请在 Azure 更新中观看公告或加入 [Teams 频道](https://teams.microsoft.com/l/team/19%3af3f168b782f64561b52abe75e59e83bc%40thread.tacv2/conversations?groupId=770d6aa5-c2f7-4794-98a0-84fd6ae7f193&tenantId=72f988bf-86f1-41af-91ab-2d7cd011db47)，以获取频繁更新、支持、新闻等更多内容！
  - question: >
      新 Azure Monitor 代理是否具有对 Linux 的强化支持？
    answer: >
      此功能目前不适用于预览版中的代理，并计划在正式发布后添加。
- name: 可视化效果
  questions:
  - question: >
      为什么看不到视图设计器？
    answer: >
      只有用户在 Log Analytics 工作区中具有“参与者”权限或更高权限时，他们才可使用视图设计器。
- name: Application Insights
  questions:
  - question: >
      配置问题
    answer: >
      *我在设置以下内容时遇到问题：*


      * [.NET 应用](app/asp-net-troubleshoot-no-data.md)

      * [Azure 诊断](agents/diagnostics-extension-to-application-insights.md)

      * [Java Web 应用](app/java-2x-troubleshoot.md)


      我无法从服务器获取任何数据：


      * [设置防火墙异常](app/ip-addresses.md)

      * [设置 ASP.NET 服务器](app/status-monitor-v2-overview.md)

      * [设置 Java 服务器](app/java-2x-agent.md)


      *应该部署多少个 Application Insights 资源：*


      * [如何设计 Application Insights 部署：一个还是多个 Application Insights 资源？](app/separate-resources.md)
  - question: >
      是否可以将 Application Insights 用于...？
    answer: >
      * [Azure VM 或 Azure 虚拟机规模集中 IIS 服务器上的 Web 应用](app/azure-vm-vmss-apps.md)

      * [IIS 服务器上的 Web 应用 - 本地或在 VM 中](app/asp-net.md)

      * [Java Web 应用](app/java-in-process-agent.md)

      * [Node.js 应用](app/nodejs.md)

      * [Azure 上的 Web 应用](app/azure-web-apps.md)

      * [Azure 上的云服务](app/cloudservices.md)

      * [在 Docker 中运行的应用服务器](./azure-monitor-app-hub.yml)

      * [单页 Web 应用](app/javascript.md)

      * [SharePoint](app/sharepoint.md)

      * [Windows 桌面应用](app/windows-desktop.md)

      * [其他平台](app/platforms.md)
  - question: >
      是否免费？
    answer: >
      是的，对于实验用途。 在基本定价计划中，应用程序可以发送一些每月免费数据量。 免费的限额足以满足开发和为少量用户发布应用的需求。 可以设置上限，以防止所使用的数据量超出指定数据量。


      较大的遥测量按 Gb 收费。 我们提供了一些有关如何[限制费用](app/pricing.md)的提示。


      企业计划对每个 Web 服务器节点每天发送的遥测进行收费。 如果要大规模使用连续导出，此计划非常合适。


      [阅读定价计划](https://azure.microsoft.com/pricing/details/application-insights/)。
  - question: >
      费用是多少？
    answer: >
      * 在 Application Insights 资源中打开“使用情况和估算成本”页面。 此处提供了一个最近使用情况的图表。 如果愿意，可以设置数据上限。

      * 打开 [Azure 计费边栏选项卡](https://portal.azure.com/#blade/Microsoft_Azure_Billing/BillingBlade/Overview)查看所有资源的帐单。
  - question: Application Insights 在我的项目中修改哪些内容？
    answer: >
      详细信息取决于项目类型。 对于 Web 应用程序：


      * 将这些文件添加到项目：
        * ApplicationInsights.config
        * ai.js
      * 安装以下 NuGet 包：
        * *Application Insights API* - 核心 API
        * *适用于 Web 应用程序 的 Application Insights API* - 用于从服务器发送遥测
        * *适用于 JavaScript 应用程序的 Application Insights API* - 用于从客户端发送遥测
      * 这些包包括以下程序集：
        * Microsoft.ApplicationInsights
        * Microsoft.ApplicationInsights.Platform
      * 将项目插入：
        * Web.config
        * packages.config
      * （仅限新项目 - 如果[将 Application Insights 添加到现有项目](app/app-insights-overview.md)，则必须手动执行此操作。）在客户端和服务器代码中插入代码片段，以使用 Application Insights 资源 ID 初始化它们。 例如，在 MVC 应用中，代码插入到主页 Views/Shared/\_Layout.cshtml 中
  - question: >
      如何从较早的 SDK 版本升级？
    answer: >
      请参阅[发行说明](app/release-notes.md)了解对应于应用程序类型的 SDK。
  - question: 如何更改项目向哪个 Azure 资源发送数据？
    answer: >
      在解决方案资源管理器中，右键单击 `ApplicationInsights.config` 并选择“更新 Application Insights”。 可在 Azure 中将数据发送到现有或新资源。 更新向导更改 ApplicationInsights.config 中的检测密钥，该密钥确定服务器 SDK 将数据发送到何处。 除非取消选中“更新全部”，否则它还将在网页中出现密钥的位置更改密钥。
  - question: >
      新的 Azure 区域是否需要使用连接字符串？
    answer: >
      新的 Azure 区域要求使用连接字符串而不是检测密钥。 [连接字符串](./app/sdk-connection-string.md)用于标识要与遥测数据关联的资源。 它还允许你修改可供你的资源将其用作遥测目标的终结点。 你需要复制连接字符串，并将其添加到应用程序的代码或环境变量中。
  - question: >
      是否应该使用连接字符串或检测密钥？
    answer: >
      建议使用[连接字符串](./app/sdk-connection-string.md)而不是检测密钥。
  - question: >
      能否在 Azure 资源管理器部署中使用 `providers('Microsoft.Insights', 'components').apiVersions[0]`？
    answer: >
      不建议使用此方法来填充 API 版本。 最新版本可表示可能包含中断性变更的预览版本。 即使使用较新的非预览版本，API 版本也并不总是与现有模板向后兼容；在某些情况下，API 版本可能不适用于部分订阅。
  - question: >
      Application Insights 收集哪些遥测？
    answer: >
      从服务器 Web 应用：


      * HTTP 请求

      * [依赖项](app/asp-net-dependencies.md)。 调用: SQL 数据库; 对外部服务的 HTTP 调用; Azure Cosmos DB、表、blob 存储和队列。

      * [异常](app/asp-net-exceptions.md)和堆栈跟踪。

      * [性能计数器](app/performance-counters.md) - 前提是使用 [Azure Monitor Application Insights 代理](app/status-monitor-v2-overview.md)、[适用于 VM 或虚拟机规模集的 Azure 监视](app/azure-vm-vmss-apps.md)或 [Application Insights collectd 写入器](app/java-2x-collectd.md)。

      * [自定义编码的事件和指标](app/api-custom-events-metrics.md)。

      * [跟踪日志](app/asp-net-trace-logs.md)（如果配置相应的收集器）。


      从[客户端网页](app/javascript.md)：


      * [页面视图计数](app/usage-overview.md)

      * [AJAX 调用](app/asp-net-dependencies.md)，从运行脚本发出的请求。

      * 页面视图加载数据

      * 用户和会话计数

      * [已经过身份验证的用户 ID](app/api-custom-events-metrics.md#authenticated-users)


      从其他源中（如果有配置）：


      * [Azure 诊断](agents/diagnostics-extension-to-application-insights.md)

      * [导入到 Analytics](logs/data-collector-api.md)

      * [Log Analytics](logs/data-collector-api.md)

      * [Logstash](logs/data-collector-api.md)
  - question: >
      是否可以筛选或修改某些遥测？
    answer: >
      可以，可在服务器中编写：


      * 用于在从应用发送属性前，对属性进行筛选并将其添加到所选遥测项的遥测处理器。

      * 用于将属性添加到所有遥测项的遥测初始化器。


      深入了解 [ASP.NET](app/api-filtering-sampling.md) 或 [Java](app/java-2x-filter-telemetry.md)。
  - question: >
      如何计算国家/地区、市/县和其他地理位置数据？
    answer: >
      使用 [GeoLite2](https://dev.maxmind.com/geoip/geoip2/geolite2/) 查找 Web 客户端的 IP 地址（IPv4 或 IPv6）。


      * 浏览器遥测：收集发送方的 IP 地址。

      * 服务器遥测：Application Insights 模块收集客户端 IP 地址。 如果设置了 `X-Forwarded-For`，则不会进行收集。

      * 若要详细了解如何在 Application Insights 中收集 IP 地址和地理位置数据，请参阅[此文](./app/ip-collection.md)。


      可以配置 `ClientIpHeaderTelemetryInitializer`，从不同的标头获取 IP 地址。 例如，在某些系统中，代理、负载均衡器或 CDN 会将其移动到 `X-Originating-IP`。 [了解详细信息](https://apmtips.com/posts/2016-07-05-client-ip-address/)。


      可以[使用 Power BI](app/export-power-bi.md ) 在映射中显示请求遥测。
  - question: 数据在门户中保留多长时间？ 是否安全？
    answer: >
      请参阅[数据保留和隐私](app/data-retention-privacy.md)。
  - question: >
      服务器或设备与 Azure 断开连接后，Application Insight 的遥测数据会怎么样？
    answer: >
      所有 SDK（包括 Web SDK）都包含“可靠传输”。 当服务器或设备与 Azure 断开连接后，遥测数据[本地存储在文件系统](./app/data-retention-privacy.md#does-the-sdk-create-temporary-local-storage) (Server SDK) 或 HTML5 会话存储 (Web SDK) 中。 SDK 会定期重新尝试发送此遥测数据，直到引入服务将其视为“过时”（日志 48 小时后过时，指标 30 分钟后过时）。 过时的遥测将被删除。 在某些情况下（例如本地存储已满时），将不进行重试。
  - question: >
      是否可能会在遥测中发送个人数据？
    answer: >
      如果代码发送了此类数据，则有可能。 如果堆栈跟踪中的变量包括个人数据，也可能发生这种情况。 开发团队应进行风险评估，确保妥善处理个人数据。 [深入了解数据保留和隐私](app/data-retention-privacy.md)。


      **所有** 八进制数的客户端 web 地址始终设置为 0，查找异地位置属性。


      默认情况下，[Application Insights JavaScript SDK](app/javascript.md) 不会在其自动完成中包含任何个人数据。 但是，应用程序中使用的一些个人数据可能会被 SDK 获取（例如，`window.title` 中的全名或 XHR URL 查询参数中的帐户 ID）。 对于自定义个人数据掩码，请添加[遥测初始化表达式](app/api-filtering-sampling.md#javascript-web-applications)。
  - question: >
      可在网页源中查看检测密钥。
    answer: >
      * 这是监视解决方案的常见做法。

      * 它不能用于窃取数据。

      * 但可用于倾斜数据或触发警报。

      * 我们未曾听说有任何客户遇到了此类问题。


      可以：


      * 将两个单独的检测密钥（独立的 Application Insights 资源）分别用于客户端和服务器数据。 或

      * 编写一个在服务器中运行的代理，并使 Web 客户端通过该代理发送数据。
  - question: 如何在诊断搜索中查看 POST 数据？
    answer: >
      我们不自动记录 POST 数据，但可以使用 TrackTrace 调用：将数据放置在消息参数中。 相比对字符串属性的限制，这具有更长的大小限制，尽管你无法对其进行筛选。
  - question: >
      应使用单个 Application Insights 资源还是多个 Application Insights 资源？
    answer: >
      对单个业务系统中的所有组件或角色使用单个资源。 对开发、测试和发布版本以及独立应用程序使用单独的资源。


      * [请参阅此处的讨论](app/separate-resources.md)

      * [示例 - 辅助角色和 Web 角色的云服务](app/cloudservices.md)
  - question: >
      如何动态更改检测密钥？
    answer: >
      * [在此处讨论](app/separate-resources.md)

      * [示例 - 辅助角色和 Web 角色的云服务](app/cloudservices.md)
  - question: >
      什么是用户和会话计数？
    answer: >
      * JavaScript SDK 在 Web 客户端上设置了用于识别返回用户的用户 cookie，以及用于对活动进行分组的会话 cookie。

      * 如果没有客户端脚本，可以[在服务器设置 cookie](https://apmtips.com/posts/2016-07-09-tracking-users-in-api-apps/)。

      * 如果一个真实的用户在不同的浏览器中使用站点，或者使用私密/隐身浏览，或使用不同的计算机，则会进行多次计数。

      * 若要识别跨计算机和浏览器登录的用户，请添加对 [setAuthenticatedUserContext()](app/api-custom-events-metrics.md#authenticated-users) 的调用。
  - question: >
      Application Insights 如何生成设备信息（浏览器、操作系统、语言、型号）？
    answer: >
      浏览器在请求的 HTTP 标头中传递用户代理字符串，Application Insights 引入服务使用[用户代理分析程序](https://github.com/ua-parser/uap-core)生成你在数据表和体验中看到的字段。 因此，Application Insights 用户无法更改这些字段。


      如果用户或企业禁止在浏览器设置中发送用户代理，则此数据偶尔可能会缺失或不准确。 此外，[用户代理分析程序正则表达式](https://github.com/ua-parser/uap-core/blob/master/regexes.yaml)可能未包括所有设备信息，或者 Application Insights 可能未采用最新更新。
  - question: 我是否已在 Application Insights 中启用所有内容？
    answer: >
      | 应看到 | 如何获取 | 为何需要它 |

      | --- | --- | --- |

      | 可用性图表 |[Web 测试](app/monitor-web-app-availability.md) |知道 Web 应用已启动 |

      | 服务器应用性能：响应时间、... |[将 Application Insights 添加到项目](app/asp-net.md)或[在服务器上安装 Azure Monitor Application Insights 代理](app/status-monitor-v2-overview.md)（或编写自己的代码来[跟踪依赖项](app/api-custom-events-metrics.md#trackdependency)） |检测性能问题 |

      | 依赖项遥测 |[在服务器上安装 Azure Monitor Application Insights 代理](app/status-monitor-v2-overview.md) |诊断数据库或其他外部组件问题 |

      | 获取异常的堆栈跟踪 |[在代码中插入 TrackException 调用](app/asp-net-exceptions.md)（但有些会自动报告） |检测和诊断异常 |

      | 搜索日志跟踪 |[添加日志记录适配器](app/asp-net-trace-logs.md) |诊断异常、性能问题 |

      | 客户端使用基础知识：页面视图、会话、... |[网页中的 JavaScript 初始值设定项](app/javascript.md) |使用情况分析 |

      | 客户端自定义指标 |[在网页中跟踪调用](app/api-custom-events-metrics.md) |增强用户体验 |

      | 服务器自定义指标 |[在服务器中跟踪调用](app/api-custom-events-metrics.md) |商业智能 |
  - question: >
      为什么搜索图表和指标图表中的计数不一致？
    answer: >
      [采样](app/sampling.md)减少了实际从应发送到门户的遥测项（请求、自定义事件等）数量。 在搜索中，看到的是实际接收到的项数。 在显示事件计数的指标图表中，看到的是发生的原始事件数。


      传输的每个项都携带一个 `itemCount` 属性，此属性显示该项表示的原始事件数量。 若要观察操作中的采样，可以在分析中运行此查询：


      ```
          requests | summarize original_events = sum(itemCount), transmitted_events = count()
      ```
  - question: >
      如何将 Application Insights 资源移动到新区域？
    answer: >
      当前不支持将现有 Application Insights 资源从一个区域移动到另一个区域。 你收集的历史数据无法迁移到新区域。 唯一的部分解决方法是：


      1. 在新区域中创建全新的 Application Insights 资源（[经典](app/create-new-resource.md)或[基于工作区](./app/create-workspace-resource.md)）。

      2. 重新创建特定于新资源中原始资源的所有唯一自定义项。

      3. 修改应用程序以使用新区域资源的[检测密钥](app/create-new-resource.md#copy-the-instrumentation-key)或[连接字符串](app/sdk-connection-string.md)。

      4. 测试以确认所有内容是否都按预期处理新的 Application Insights 资源。

      5. 此时，你可以删除原始资源，这会导致所有历史数据丢失。 你也可以保留原始资源，用于在其数据保留设置期间进行历史报告。


      通常需要在新区域中为资源手动重新创建或更新的唯一自定义项包括但不限于：


      - 重新创建自定义仪表板和工作簿。

      - 重新创建或更新任何自定义日志/指标警报的范围。

      - 重新创建可用性警报。

      - 重新创建用户访问新资源所需的任何 Azure 基于角色的访问控制 (Azure RBAC) 自定义设置。

      - 复制涉及引入采样、数据保留、每日上限和自定义指标启用的设置。 可通过“使用情况和预估成本”窗格控制这些设置。

      - 依赖 API 密钥（如[版本注释](./app/annotations.md)、[实时指标安全控制通道](app/live-stream.md#secure-the-control-channel)等）的任何集成。你将需要生成新的 API 密钥并更新关联的集成。

      - 需要重新配置经典资源中的连续导出。

      - 需要重新配置基于工作区资源中的诊断设置。


      > [!NOTE]

      > 如果在新区域中创建的资源要用于替换经典资源，我们建议探索[创建基于工作区的新资源](app/create-workspace-resource.md)或[将现有资源迁移至基于工作区的资源](app/convert-classic-resource.md)的好处。
  - question: >
      自动化
    answer: >
      ### <a name="configuring-application-insights"></a>配置 Application Insights


      可以使用 Azure 资源监视器[编写 PowerShell 脚本](app/powershell.md)：


      * 创建并更新 Application Insights 资源。

      * 设置定价计划。

      * 获取检测密钥。

      * 添加指标警报。

      * 添加可用性测试。


      无法设置指标资源管理器报表，或设置连续导出。


      ### <a name="querying-the-telemetry"></a>查询遥测


      使用 [REST API](https://dev.applicationinsights.io/) 运行 [Analytics](./logs/log-query-overview.md) 查询。
  - question: >
      如何设置事件警报？
    answer: >
      Azure 警报仅出现在指标上。 创建一个每当事件发生时都跨越值阈值的自定义指标。 然后在该指标上设置警报。 每次指标在任一方向超过阈值时，你都将收到通知；无论初始值高低，首次超过时都不会收到通知；总是有几分钟的延迟。
  - question: >
      Azure Web 应用和 Application Insights 之间是否有数据传输费用？
    answer: >
      * 如果 Azure Web 应用托管在具有 Application Insights 集合终结点的数据中心内，则不收取费用。

      * 如果主机数据中心没有集合终结点，那么应用的遥测会产生 [ Azure 传出费用](https://azure.microsoft.com/pricing/details/bandwidth/)。


      这与 Application Insights 资源的托管位置无关。 它只取决于终结点的分布情况。
  - question: >
      是否可以将遥测数据发送到 Application Insights 门户？
    answer: >
      建议使用我们的 SDK 并使用 [SDK API](app/api-custom-events-metrics.md)。 为各种[平台](app/platforms.md)提供了相应的 SDK 变体。 这些 SDK 可处理缓冲、压缩、限制以及重试等。 但是，[引入架构](https://github.com/microsoft/ApplicationInsights-dotnet/tree/master/BASE/Schema/PublicSchema)和[终结点协议](https://github.com/MohanGsk/ApplicationInsights-Home/blob/master/EndpointSpecs/ENDPOINT-PROTOCOL.md)是公共的。
  - question: >
      是否可以监视 Intranet Web 服务器？
    answer: >
      可以，但你需要通过防火墙例外或代理重定向来允许流量到我们的服务。

      - QuickPulse `https://rt.services.visualstudio.com:443`

      - ApplicationIdProvider `https://dc.services.visualstudio.com:443`

      - TelemetryChannel `https://dc.services.visualstudio.com:443`


      在[此处](app/ip-addresses.md)查看服务和 IP 地址的完整列表。


      ### <a name="firewall-exception"></a>防火墙例外


      允许 Web 服务器将遥测发送到我们的终结点。


      ### <a name="gateway-redirect"></a>网关重定向


      通过重写配置中的终结点，将流量从服务器路由到 Intranet 上的网关。 如果配置中不存在这些“终结点”属性，则这些类将使用下面示例 ApplicationInsights.config 中显示的默认值。


      你的网关应将流量路由到我们的终结点的基址。 在你的配置中，将默认值替换为 `http://<your.gateway.address>/<relative path>`。


      ### <a name="example-applicationinsightsconfig-with-default-endpoints"></a>使用默认终结点的示例 ApplicationInsights.config：


      ```xml

      <ApplicationInsights>
        ...
        <TelemetryModules>
          <Add Type="Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.QuickPulse.QuickPulseTelemetryModule, Microsoft.AI.PerfCounterCollector">
            <QuickPulseServiceEndpoint>https://rt.services.visualstudio.com/QuickPulseService.svc</QuickPulseServiceEndpoint>
          </Add>
        </TelemetryModules>
          ...
        <TelemetryChannel>
           <EndpointAddress>https://dc.services.visualstudio.com/v2/track</EndpointAddress>
        </TelemetryChannel>
        ...
        <ApplicationIdProvider Type="Microsoft.ApplicationInsights.Extensibility.Implementation.ApplicationId.ApplicationInsightsApplicationIdProvider, Microsoft.ApplicationInsights">
          <ProfileQueryEndpoint>https://dc.services.visualstudio.com/api/profiles/{0}/appId</ProfileQueryEndpoint>
        </ApplicationIdProvider>
        ...
      </ApplicationInsights>

      ```


      > [!NOTE]

      > 自 v2.6.0 开始，具备 ApplicationIdProvider 功能。


      ### <a name="proxy-passthrough"></a>代理传递


      可配置计算机级别或应用程序级别代理来实现代理传递。

      有关详细信息，请参阅 dotnet 关于 [DefaultProxy](/dotnet/framework/configure-apps/file-schema/network/defaultproxy-element-network-settings) 的文章。

       示例 Web.config：

      ```xml

      <system.net>
          <defaultProxy>
            <proxy proxyaddress="http://xx.xx.xx.xx:yyyy" bypassonlocal="true"/>
          </defaultProxy>
      </system.net>

      ```
  - question: >
      是否可以在 Intranet 服务器上运行可用性 Web 测试？
    answer: >
      我们的 [Web 测试](app/monitor-web-app-availability.md)可在遍布全球的各个接入点上运行。 可运用以下两种解决方案：


      * 防火墙门 - 允许从[长且可更改的 Web 测试代理列表](app/ip-addresses.md)中请求自己的服务器。

      * 编写自己的代码，从 Intranet 内部向服务器发送定期请求。 可以为此运行 Visual Studio Web 测试。 测试人员可以使用 TrackAvailability() API 将结果发送到 Application Insights。
  - question: >
      收集遥测数据需要多长时间？
    answer: >
      大多数 Application Insights 数据的延迟小于 5 分钟。 有些数据可能需要更长的时间，通常是较大的日志文件。 有关详细信息，请参阅 [Application Insights SLA](https://azure.microsoft.com/support/legal/sla/application-insights/v1_2/)。


      <!--Link references-->


      [data]: app/data-retention-privacy.md

      [platforms]: app/platforms.md

      [start]: app/app-insights-overview.md

      [windows]: app/app-insights-windows-get-started.md
  - question: >
      HTTP 502 和 503 响应并不总是由 Application Insights 捕获
    answer: >
      “502 错误的网关”和“503 服务不可用”错误并不总是由 Application Insights 捕获。 如果仅将客户端 JavaScript 用于监视，则这是预期的行为，因为错误响应会在包含 HTML 标头且会呈现监视性的 JavaScript 代码片段的页面之前返回。


      如果从启用了服务器端监视的服务器发送了 502 或 503 响应，则 Application Insights SDK 会收集这些错误。


      但某些情况下，即使在应用程序的 Web 服务器上启用了服务器端监视，也不会由 Application Insights 捕获 502 或 503 错误。 许多新式 Web 服务器不允许客户端直接通信，而是使用反向代理之类的解决方案在客户端和前端 Web 服务器之间来回传递信息。


      在这种情况下，由于反向代理层出现问题，可能会将 502 或 503 响应返回到客户端，该响应不会被 Application Insights 直接捕获。 可能需要将日志从反向代理转发到 Log Analytics，并创建自定义规则来检查 502/503 响应，这样有助于检测该层中的问题 若要详细了解 502 和 503 错误的常见原因，请参阅 Azure 应用服务[故障排除文章中的“502 错误的网关”和“503 服务不可用”](../app-service/troubleshoot-http-502-http-503.md)。
- name: OpenTelemetry
  questions:
  - question: >
      什么是 OpenTelemetry？
    answer: >
      一种新的可观测性开源标准。 更多信息请访问 [https://opentelemetry.io/](https://opentelemetry.io/)。
  - question: >
      Microsoft/Azure Monitor Application Insights 为什么要对 OpenTelemetry 进行投资？
    answer: >
      Microsoft 是 OpenTelemetry 的最大贡献者之一。


      OpenTelemetry 的关键价值主张是，它与供应商无关，可以跨语言提供一致的 API/SDK。


      随着时间的推移，我们相信 OpenTelemetry 将使 Azure Monitor 的客户还能够观测以其他语言（而不仅仅是我们[支持的语言](https://review.docs.microsoft.com/azure/azure-monitor/app/platforms)）编写的应用程序，并增加可供客户使用的[检测库](https://opentelemetry.io/docs/concepts/components/#instrumentation-libraries)数量。 具体而言，OpenTelemetry .NET SDK 的大规模运行性能优于其前任，即 Application Insights SDK。


      最后，OpenTelemetry 符合 Microsoft 的[拥抱开源](https://opensource.microsoft.com/)策略。
  - question: >
      OpenTelemetry 的状态如何？
    answer: >
      完整的可观测性解决方案包括可观测性的所有三大支柱。 OpenTelemetry 社区一直在为[分布式跟踪](https://medium.com/opentelemetry/opentelemetry-specification-v1-0-0-tracing-edition-72dd08936978)做出不懈的努力，规范以及支持的语言实现现已标记为稳定。 [指标](https://medium.com/opentelemetry/opentelemetry-metrics-roadmap-f4276fd070cf)和[日志](https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/logs/overview.md)方面的工作仍在进行中。 Azure Monitor 使用基于 OpenTelemetry 的受支持遥测解决方案，其中仅包括分布式跟踪，但我们已计划当其他支柱在 OpenTelemetry 社区中变成熟后添加它们。
  - question: >
      如何测试 OpenTelemetry？
    answer: >
      在 [https://aka.ms/AzMonOtel](https://aka.ms/AzMonOtel) 注册，加入我们的 Azure Monitor Application Insights 早期采用者社区。
  - question: >
      如何确定 OpenTelemetry 是否适合我？
    answer: >
      OpenTelemetry 社区使用[稳定版或试验版](https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/versioning-and-stability.md)来表示软件的成熟度。 另外，Azure Monitor 使用“公共预览版”和“正式版”来表示稳定性和支持承诺。


      如果你是现有的 Azure Monitor Application Insights 客户，则我们尚不建议迁移到 OpenTelemetry（Java 应用程序除外，对于此类应用程序，在[基于 OpenTelemetry 的产品/服务](./app/java-in-process-agent.md)于 [2020 年 11 月推出正式版](https://azure.microsoft.com/updates/java-agent-application-insights-ga/)后，我们建议每个客户使用该产品/服务）。


      当前适用于 C#（[ASP.NET](app/asp-net.md) 和 [ASP.NET Core](app/asp-net-core.md)）和 [Javascript (Node.js)](app/nodejs.md) 或 [OpenCensus Python](app/opencensus-python.md) 的 Application Insights SDK 提供了 Application Insights 中最丰富的功能体验。


      可能会使你决定尽快过渡到 OpenTelemetry 的场景包括：同时向 Azure Monitor 和其他供应商发送遥测数据，收集和融合[现有的检测协议](https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/receiver)，或者利用 OpenTelemetry-Collector 中提供的功能。 例如，客户已报告使用了[批处理器](https://github.com/open-telemetry/opentelemetry-collector/tree/main/processor/batchprocessor)、[基于尾部的采样器](https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/processor/tailsamplingprocessor)和/或[属性处理器](https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/processor/attributesprocessor)。 虽然现有 Application Insights SDK 中存在类似的功能，但某些客户更倾向于在代理中的下游位置托管这种处理。


      可以在开源存储库中看到我们过渡到适用于 [C#](https://github.com/Azure/azure-sdk-for-net/tree/main/sdk/monitor/Azure.Monitor.OpenTelemetry.Exporter)、[JavaScript](https://github.com/Azure/azure-sdk-for-js/tree/main/sdk/monitor/monitor-opentelemetry-exporter) 和 [Python](https://github.com/Azure/azure-sdk-for-python/blob/main/sdk/monitor/azure-monitor-opentelemetry-exporter/) 的基于 OpenTelemetry 的 Azure Monitor 导出器的进度。
  - question: >
      我是否可以在生产环境中使用预览版？
    answer: >
      不建议这样做。 有关详细信息，请参阅 [Microsoft Azure 预览版补充使用条款](https://azure.microsoft.com/support/legal/preview-supplemental-terms/)。
  - question: >
      手动和自动检测之间有何区别？
    answer: "手动检测针对 OpenTelemetry API 编写代码，通常包括在应用程序中安装特定于语言的 SDK。 “手动”并不意味着需要编写复杂的代码来定义分布式跟踪的范围（不过仍可以这样做）。 使用由 OpenTelemetry 贡献者维护的丰富且[不断扩充的一组检测库](https://opentelemetry.io/registry/)，可以轻松地跨通用框架和库捕获遥测信号。 \n\n自动检测通过配置来启用遥测数据收集，而不会涉及到应用程序的代码。 此方法虽然非常方便，但其可配置度倾向于较低，并且它不是在所有语言中都可用。\n\nOpenTelemetry 自动检测功能包括一个由 Microsoft 通过名为 [Java 3.X](app/java-in-process-agent.md) 的发行版提供支持的 Java 产品/服务。 [Python](https://github.com/open-telemetry/opentelemetry-python/tree/main/opentelemetry-instrumentation) 和 [.NET](https://github.com/open-telemetry/opentelemetry-dotnet-instrumentation) 提供试验性自动检测功能，但 Microsoft 目前尚不支持这些功能。 所有其他 OpenTelemetry 语言仅注重于手动检测。\n"
  - question: >
      是否可以使用 OpenTelemetry-Collector？
    answer: "某些客户已开始使用 [OpenTelemetry-Collector](https://github.com/open-telemetry/opentelemetry-collector/blob/main/docs/design.md) 作为代理替代方案，尽管 Microsoft 尚不正式支持使用基于代理的方法进行应用程序监视。 与此同时，开源社区已贡献了一个 [OpenTelemetry-Collector Azure Monitor 导出器](https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/exporter/azuremonitorexporter)，某些客户正在使用它向 Azure Monitor Application Insights 发送数据。\n\n我们已计划在将来支持基于代理的方法，但目前还无法提供细节和时间表。 我们的目标是为任何支持 OpenTelemetry 的语言提供一个路径，以通过 [OpenTelemetry 协议 (OTLP)](https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/protocol/README.md) 将数据发送到 Azure Monitor。 这样，客户就不仅能够观测以我们[支持的语言](https://review.docs.microsoft.com/azure/azure-monitor/app/platforms)编写的应用程序，而且还能观测以其他语言编写的应用程序。 \n"
  - question: >
      OpenCensus 和 OpenTelemetry 之间有何区别？
    answer: >
      [OpenCensus](https://opencensus.io/) 是 [OpenTelemetry](https://opentelemetry.io/) 的前身。 Microsoft 帮助整合 [OpenTracing](https://opentracing.io/) 和 OpenCensus 用于创建 OpenTelemetry，OpenTelemetry 是全球唯一的可观测性标准。 Azure Monitor 当前[生产推荐的 Python SDK](app/opencensus-python.md) 基于 OpenCensus，但最终所有 Azure Monitor SDK 都将基于 OpenTelemetry。
- name: 容器见解
  questions:
  - question: >
      “其他进程”在节点视图下表示什么？
    answer: "“其他进程”旨在帮助你清楚了解节点上资源使用率较高的根本原因。 这样，你就能将容器化流程与非容器化流程的使用量区分开。\n\n这些其他进程是哪些进程？\n\n它们是在节点上运行的非容器化进程。\n\n如何对其进行计算？\n\n其他进程 = CAdvisor 中的总使用量 - 容器化进程的使用量 \n\n其他进程包括：\n\n- 自行托管的或托管 Kubernetes 非容器化进程\n\n- 容器运行时进程\n\n- Kubelet\n\n- 节点上运行的系统进程\n\n- 节点硬件或 VM 上运行的其他非 Kubernetes 工作负载\n"
  - question: >
      查询 ContainerLog 表时，没看到填充有 Image 和 Name 属性值。
    answer: >
      对于代理版本 ciprod12042019 及更高版本，为了尽量减少收集日志数据时产生的费用，默认情况下不会为每行日志填充这两个属性。 有两种方法可用于查询表，查询包含这些属性及其值：


      ### <a name="option-1"></a>选项 1


      联接其他表，在结果中包含这些属性值。


      联接 ContainerID 属性，将查询修改为包含 `ContainerInventory` 表中的 Image 和 ImageTag 属性。 通过在 ContainerID 属性上进行联接，可以包含 KubepodInventory 表的 ContaineName 字段中的 Name 属性（与以前在 `ContainerLog` 表中显示的相同）。 这是建议选项。


      下面是一个详细查询示例，说明了如何使用联接来获取这些字段值。


      ```

      //lets say we are querying an hour worth of logs

      let startTime = ago(1h);

      let endTime = now();

      //below gets the latest Image & ImageTag for every containerID, during the time window

      let ContainerInv = ContainerInventory | where TimeGenerated >= startTime and TimeGenerated < endTime | summarize arg_max(TimeGenerated, *)  by ContainerID, Image, ImageTag | project-away TimeGenerated | project ContainerID1=ContainerID, Image1=Image ,ImageTag1=ImageTag;

      //below gets the latest Name for every containerID, during the time window

      let KubePodInv  = KubePodInventory | where ContainerID != "" | where TimeGenerated >= startTime | where TimeGenerated < endTime | summarize arg_max(TimeGenerated, *)  by ContainerID2 = ContainerID, Name1=ContainerName | project ContainerID2 , Name1;

      //now join the above 2 to get a 'jointed table' that has name, image & imagetag. Outer left is safer in-case there are no kubepod records are if they are latent

      let ContainerData = ContainerInv | join kind=leftouter (KubePodInv) on $left.ContainerID1 == $right.ContainerID2;

      //now join ContainerLog table with the 'jointed table' above and project-away redundant fields/columns and rename columns that were re-written

      //Outer left is safer so you dont lose logs even if we cannot find container metadata for loglines (due to latency, time skew between data types etc...)

      ContainerLog

      | where TimeGenerated >= startTime and TimeGenerated < endTime

      | join kind= leftouter (
         ContainerData
      ) on $left.ContainerID == $right.ContainerID2 | project-away ContainerID1, ContainerID2, Name, Image, ImageTag | project-rename Name = Name1, Image=Image1, ImageTag=ImageTag1

      ```


      ### <a name="option-2"></a>方法 2


      为每行容器日志的这些属性重新启用收集功能。


      如果第一种方法因涉及到更改查询而不便使用，可通过在代理配置映射中启用设置 `log_collection_settings.enrich_container_logs` 来重新开始收集这些字段，如[数据收集配置设置](containers/container-insights-agent-config.md)中所述。


      > [!NOTE]

      > 建议不要对节点数超过 50 个的大型群集使用第二种方法，因为它将从群集中的每个节点生成 API 服务器调用来执行该扩充。 该方法还会增加收集到的每行日志的数据大小。
  - question: >
      能否在 Grafana 中查看收集的指标？
    answer: >
      容器见解支持在 Grafana 仪表板中查看 Log Analytics 工作区中存储的指标。 我们提供了一个模板，你可从 Grafana 的[仪表板存储库](https://grafana.com/grafana/dashboards?dataSource=grafana-azure-monitor-datasource&category=docker)中下载以供入门和参考，它可帮助你了解如何从受监视的群集查询其他数据，来在自定义 Grafana 仪表板中直观显示。
  - question: >
      是否可以通过容器见解来监视 AKS-engine 群集？
    answer: >
      容器见解支持监视部署到 Azure 上托管的 AKS-engine（以前称为“ACS-engine”）群集的容器工作负荷。 如需进一步的详细信息并大致了解为此方案启用监视所需的步骤，请参阅[将容器见解用于 AKS-engine](https://github.com/microsoft/OMS-docker/tree/aks-engine)。
  - question: >
      为什么在 Log Analytics 工作区中看不到数据？
    answer: >
      如果每天在特定时间都无法查看 Log Analytics 工作区中的任何数据，则你可能已达到默认的 500 MB 限制或为控制每天要收集的数据量而指定的每日上限。 达到当天的限制后，数据收集将停止且只能在第二天恢复。 若要查看数据使用情况并根据预期的使用模式更新到其他定价层，请参阅[日志数据使用情况和成本](logs/manage-cost-storage.md)。
  - question: >
      ContainerInventory 表中指定了哪些容器状态？
    answer: >
      ContainerInventory 表包含已停止和正在运行的容器的信息。 此表由代理中的一个工作流进行填充，该工作流查询 Docker 中的所有容器（正在运行的和已停止的），并将该数据转发到 Log Analytics 工作区。
  - question: >
      如何解决“缺少订阅注册”错误？
    answer: >
      如果收到“缺少 Microsoft.OperationsManagement 的订阅注册”错误，可通过在定义工作区的订阅中注册资源提供程序 Microsoft.OperationsManagement 来解决它 。 可以在[此处](../azure-resource-manager/templates/error-register-resource-provider.md)找到介绍如何执行此操作的文档。
  - question: >
      是否支持启用了 Kubernetes RBAC 的 AKS 群集？
    answer: >
      容器监视解决方案不支持 Kubernetes RBAC，但容器见解支持 Kubernetes RBAC。 在显示这些群集的数据的边栏选项卡上，解决方案详细信息页可能不会显示正确的信息。
  - question: >
      如何通过 Helm 为 kube-system 命名空间中的容器启用日志收集？
    answer: >
      默认情况下，kube-system 命名空间中的容器的日志收集被禁用。 可以通过在 omsagent 上设置一个环境变量来启用日志收集。 有关详细信息，请参阅[容器见解](https://aka.ms/azuremonitor-containers-helm-chart) GitHub 页。
  - question: >
      如何将 omsagent 更新为最新发布的版本？
    answer: >
      若要了解如何升级代理，请参阅[代理管理](containers/container-insights-manage-agent.md)。
  - question: >
      为什么大于 16KB 的日志行在 Log Analytics 中会拆分为多个记录？
    answer: >
      该代理使用 [Docker JSON 文件日志记录驱动程序](https://docs.docker.com/config/containers/logging/json-file/)来捕获容器的 stdout 和 stderr。 此日志记录驱动程序会在[大于 16KB](https://github.com/moby/moby/pull/22982) 的日志行从 stdout 或 stderr 复制到文件时将其拆分为多行。
  - question: >
      如何启用多行日志记录？
    answer: "目前，容器见解不支持多行日志记录，不过存在可用的解决方法。 你可以将所有服务配置为以 JSON 格式进行写入，然后 Docker/Moby 会在单个行上写入它们。\n\n例如，可以将你的日志包装为一个 JSON 对象，如示例 node.js 应用程序的以下示例中所示：\n\n```\nconsole.log(json.stringify({ \n      \"Hello\": \"This example has multiple lines:\",\n      \"Docker/Moby\": \"will not break this into multiple lines\",\n      \"and you will receive\":\"all of them in log analytics\",\n      \"as one\": \"log entry\"\n      }));\n```\n\n查询该数据时，该数据与用于日志的 Azure Monitor 中的以下示例类似：\n\n```\nLogEntry : ({\"Hello\": \"This example has multiple lines:\",\"Docker/Moby\": \"will not break this into multiple lines\", \"and you will receive\":\"all of them in log analytics\", \"as one\": \"log entry\"}\n```\n\n要详细了解此问题，请查看以下 [GitHub 链接](https://github.com/moby/moby/issues/22920)。\n"
  - question: >
      如何解决在启用实时日志时遇到的 Azure AD 错误？
    answer: >
      你可能会看到以下错误：在请求中指定的回复 URL 与为应用程序“<application ID\>”配置的回复 URL 不匹配。 在[如何使用容器见解实时查看容器数据](containers/container-insights-livedata-setup.md#configure-ad-integrated-authentication)一文中，可以找到此问题的解决方案。
  - question: >
      在加入后为何无法升级群集？
    answer: >
      在为 AKS 群集启用容器见解后，如果删除该群集已将数据发送到其中的 Log Analytics 工作区，那么，在尝试升级该群集时操作会失败。 要解决此情况，必须禁用再重新启用监视功能，使其引用订阅中的其他有效工作区。 在你重新尝试升级群集时，应该就会处理并成功完成。
  - question: >
      需要为代理打开/允许哪些端口和域？
    answer: >
      请参阅[网络防火墙要求](containers/container-insights-onboard.md#network-firewall-requirements)，了解使用Azure、Azure 美国政府和 Azure 中国世纪互联云的容器化代理所需的代理和防火墙配置信息。
- name: VM 见解
  questions:
  - question: >
      是否可以载入到现有工作区？
    answer: >
      如果虚拟机已连接到 Log Analytics 工作区，则在载入到 VM 见解时，可以继续使用该工作区，前提是该工作区位于某个[受支持的区域](vm/vminsights-configure-workspace.md#supported-regions)中。
  - question: >
      是否可以载入到新工作区？
    answer: >
      如果 VM 当前未连接到现有的 Log Analytics 工作区，则你需要创建一个新工作区来存储数据。 如果通过 Azure 门户为 VM 见解配置了单个 Azure VM，则系统会自动创建新的默认工作区。


      如果选择使用基于脚本的方法，可在[使用 Azure PowerShell 或资源管理器模板启用 VM 见解](./vm/vminsights-enable-powershell.md)一文中找到这些步骤。
  - question: >
      如果 VM 已开始向现有工作区报告，我该怎么做？
    answer: >
      如果你已开始从虚拟机收集数据，则可能已将虚拟机配置为向现有的 Log Analytics 工作区报告数据。  只要该工作区在某个受支持的区域中，就可以在该预先存在的工作区中启用 VM 见解。  目前，如果使用的工作区不在受支持的区域中，则无法加入到 VM 见解。  我们将力求支持更多的区域。
  - question: >
      为何我的 VM 无法载入？
    answer: >
      从 Azure 门户载入 Azure VM 时，将执行以下步骤：


      * 创建默认的 Log Analytics 工作区（如果已选择该选项）。

      * 使用 VM 扩展在 Azure VM 上安装 Log Analytics 代理（如果确定有必要）。

      * 使用某个扩展在 Azure VM 上安装 VM 见解映射依赖项代理（如果确定有必要）。


      在载入过程中，我们会检查上述每个步骤的状态，并在门户中返回通知状态。 配置工作区和安装代理通常需要 5 到 10 分钟。 在门户中查看监视数据需要额外花费 5 到 10 分钟时间。


      如果在启动载入后有消息指出 VM 需要载入，则 VM 最长需要花费 30 分钟来完成该过程。
  - question: >
      我在我 VM 的性能图表中看不到任何或部分数据
    answer: >
      性能图表已更新为使用 InsightsMetrics 表中存储的数据。  要查看这些图表中的数据，需要进行升级，使用新的 VM 见解解决方案。  有关其他信息，请参阅[正式发布版常见问题解答](vm/vminsights-ga-release-faq.yml)。


      如果在磁盘表或某些性能图表中未看到性能数据，则原因可能是未在工作区中配置性能计数器。 若要解决此问题，请运行以下 [PowerShell 脚本](./vm/vminsights-enable-powershell.md)。
  - question: >
      VM 见解映射功能与服务映射有何不同？
    answer: >
      VM 见解映射功能基于服务映射，但存在以下差异：


      * 可以从“VM”边栏选项卡，或者 Azure Monitor 中的“VM 见解”访问“映射”视图。

      * “映射”中的连接现在可单击，所选连接的边侧面板中会显示连接指标数据的视图。

      * 可以使用一个新 API 创建映射，以便更好地支持更复杂的映射。

      * 受监视 VM 现在包含在客户端组节点中，圆环图显示该组中受监视与不受监视虚拟机的比例。  展开该组后，还可以在该图表中筛选计算机列表。

      * 受监视虚拟机现在包含在服务器端口组节点中，圆环图显示该组中受监视与不受监视虚拟机的比例。  展开该组后，还可以在该图表中筛选计算机列表。

      * 映射样式已更新，与 Application Insights 中的应用映射更一致。

      * 侧面板已更新，但尚未包含服务映射中支持的整套集成功能 -“更新管理”、“更改跟踪”、“安全性”和“服务台”。

      * 用于选择要映射的组和计算机的选项已更新，现在支持订阅、资源组、Azure 虚拟机规模集和云服务。

      * 无法在 VM 见解映射功能中创建新的服务映射计算机组。
  - question: >
      为何我的性能图表显示虚线？
    answer: >
      这有几个原因。  如果数据集合中存在间隙，则我们会绘制虚线。  如果为启用的性能计数器修改了数据采样频率（默认设置为每隔 60 秒收集数据），并且为图表选择较窄的时间范围，而采样频率小于图表中使用的桶大小（例如，采样频率为每隔 10 分钟，图表上的每个桶为 5 分钟），则可能会在图表中看到虚线。  在这种情况下，选择查看更宽的时间范围应该可使图表线条显示为实线而不是虚线。
  - question: >
      VM 见解是否支持组？
    answer: >
      是，一旦安装依赖项代理，我们就会从 VM 中收集信息，以根据订阅、资源组、虚拟机规模集和云服务显示组。  如果你一直在使用服务映射并创建了计算机组，则也会显示这些组。  如果你为正在查看的工作区创建了计算机组，那么这些组也会显示在组筛选器中。
  - question: >
      如何查看聚合性能图表中驱动第 95 百分位线条的详细信息？
    answer: >
      默认情况下，列表已经过排序，会显示所选指标的第 95 百分位值最大的 VM，但“可用内存”图表除外，其中显示第 5 百分位值最小的计算机。  单击图表会打开“前 N 项列表”视图，其中已选择相应的指标。
  - question: >
      “映射”功能如何处理不同 VNet 和子网中的重复 IP？
    answer: >
      如果跨子网和 VNet 复制 VM 或 Azure 虚拟机规模集的 IP 范围，可能导致 VM 见解映射显示错误的信息。 这是一个已知问题，我们正在研究可改进此体验的选项。
  - question: >
      “映射”功能是否支持 IPv6？
    answer: >
      “映射”功能目前仅支持 IPv4，我们正在研究 IPv6 的支持。 我们还支持 IPv6 隧道内部的 IPv4。
  - question: >
      加载资源组或其他大型组的映射时，难以查看映射
    answer: >
      尽管我们已对“映射”做出改进，使其能够处理大型和复杂的配置，但我们认识到，映射中可能包含大量以群集方式工作的节点和连接。  我们将持续致力增强支持以提高可伸缩性。
  - question: >
      为何“性能”选项卡上的网络图表不同于 Azure VM“概述”页上的网络图表？
    answer: >
      Azure VM 的概述页基于来宾 VM 中的活动的主机度量值显示图表。  Azure VM“概述”中的网络图表仅显示计费的网络流量。  这不包括虚拟网络间的流量。  为 VM 见解显示的数据和图表基于来宾 VM 中的数据，网络图表显示入站和出站到该 VM 的所有 TCP/IP 流量，包括虚拟网络之间的流量。
  - question: >
      如何测量 VMConnection 中存储且在连接面板和工作簿中显示的数据的响应时间？
    answer: >
      响应时间为近似值。 我们不会检测应用程序的代码，因此不会真正知道请求的开始时间和响应到达的时间。 相反，我们会观察在连接上发送的数据及之后该连接上返回的数据。 代理会跟踪这些发送和接收并尝试对它们进行配对：一个发送序列后跟一个接收序列就被解释为一个请求/响应对。 这些操作之间的时间是响应时间。 它将包括网络延迟和服务器处理时间。


      该近似值非常适合基于请求/响应的协议，即在连接上发出单个请求，到达的也是单个响应。 这种情况适用于 HTTP(S)（不带管道），但不适用于其他协议。
  - question: >
      如果我使用的是 Log Analytics 免费定价计划，它们有何限制？
    answer: >
      如果已经为 Azure Monitor 配置了使用免费定价层的 Log Analytics 工作区，则 VM 见解的映射功能将仅支持已连接到工作区的五台计算机。 如果已有五台 VM 连接到免费工作区，你断开了其中一台 VM 的连接，然后连接到一台新的 VM，则新的 VM 将不受监视并且不会反映在“映射”页上。


      此情况下，在你打开 VM 并从左侧窗格中选择“见解”时，甚至在 VM 上安装它后，系统都将通过“立即尝试”选项向你发出提示 。  但是，如果此 VM 未加入到 VM 见解，则不会像通常情况下那样通过选项向你发出提示。
- name: SQL 见解（预览版）
  questions:
  - question: >
      支持哪些版本的 SQL Server？
    answer: >
      我们支持 SQL Server 2012 和所有更新版本。 有关更多详细信息，请参阅[支持的版本](insights/sql-insights-overview.md#supported-versions)。
  - question: >
      支持哪些 SQL 资源类型？
    answer: >
      - Azure SQL Database

      - Azure SQL 托管实例

      - Azure 虚拟机上的 SQL Server（在已注册到 [SQL 虚拟机](../azure-sql/virtual-machines/windows/sql-agent-extension-manually-register-single-vm.md)提供程序的虚拟机上运行的 SQL Server）

      - Azure VM（在未注册到 [SQL 虚拟机](../azure-sql/virtual-machines/windows/sql-agent-extension-manually-register-single-vm.md)提供程序的虚拟机上运行的 SQL Server）


      有关不支持或有限支持的场景的详细信息，请参阅[支持的版本](insights/sql-insights-overview.md#supported-versions)。
  - question: >
      支持运行 SQL Server 的虚拟机的哪些操作系统？
    answer: >
      我们支持 Azure 虚拟机上 [Windows](../azure-sql/virtual-machines/windows/sql-server-on-azure-vm-iaas-what-is-overview.md#get-started-with-sql-server-vms) 和 [Linux](../azure-sql/virtual-machines/linux/sql-server-on-linux-vm-what-is-iaas-overview.md#create) 文档中为 SQL Server 指定的所有操作系统。
  - question: >
      支持哪些操作系统监视虚拟机？
    answer: >
      Ubuntu 18.04 目前是支持监视虚拟机的唯一操作系统。
  - question: >
      监视数据将存储在 Log Analytics 中的哪个位置？
    answer: >
      所有监视数据都存储在 InsightsMetrics 表中。 “源”列具有 `solutions.azm.ms/telegraf/SqlInsights` 值。 “命名空间”列具有以 `sqlserver_` 开头的值。
  - question: >
      多久收集一次数据？
    answer: >
      数据收集的频率可自定义。 有关默认频率的详细信息，请参阅 [SQL 见解收集的数据](../insights/../azure-monitor/insights/sql-insights-overview.md#collected-data)，有关自定义频率的说明，请参阅[创建 SQL 监视配置文件](../insights/../azure-monitor/insights/sql-insights-enable.md#create-sql-monitoring-profile)。
additionalContent: "\n## <a name=\"next-steps\"></a>后续步骤\n\n如果未在此处找到问题的答案，可查看以下论坛，了解其他问题和解答。\n\n- [Log Analytics](/answers/topics/azure-monitor.html)\n- [Application Insights](/answers/topics/azure-monitor.html)\n\n有关 Azure Monitor 的一般性反馈，请访问[反馈论坛](https://feedback.azure.com/forums/34192--general-feedback)。"
