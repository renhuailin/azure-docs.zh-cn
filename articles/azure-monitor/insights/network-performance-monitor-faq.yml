### YamlMime:FAQ
metadata:
  title: 常见问题解答 - Azure 中的网络性能监视器解决方案 | Microsoft Docs
  description: 本文收集了有关 Azure 中网络性能监视器的常见问题解答。 网络性能监视器 (NPM) 可帮助你近乎实时地监视网络性能，以检测并找到网络性能瓶颈。
  ms.topic: conceptual
  author: vinynigam
  ms.author: vinigam
  ms.date: 10/12/2018
  ms.openlocfilehash: e899e68d631dfd41ffac3fd111c3ceca86f4cb93
  ms.sourcegitcommit: c05e595b9f2dbe78e657fed2eb75c8fe511610e7
  ms.translationtype: HT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 06/11/2021
  ms.locfileid: "112034842"
title: 网络性能监视器解决方案常见问题解答
summary: "\n![网络性能监视器符号](media/network-performance-monitor-faq/npm-symbol.png)\n\n> [!IMPORTANT]\n> 自 2021 年 7 月 1 日起，你将无法在现有工作区中添加新测试，也无法在网络性能监视器中启用新的工作区。 可以继续使用在 2021 年 7 月 1 日之前创建的测试。 为了最大程度地减少当前工作负载的服务中断，请在 2024 年 2 月 29 日之前，在 Azure 网络观察程序中[将测试从网络性能监视器迁移到新连接监视器](../../network-watcher/migrate-to-connection-monitor-from-network-performance-monitor.md)。\n\n本文收集了有关 Azure 中网络性能监视器 (NPM) 的常见问题 (FAQ)\n\n[网络性能监视器](../../networking/network-monitoring-overview.md)是一项基于云的[混合网络监视](./network-performance-monitor-performance-monitor.md)解决方案，可帮助你监视网络基础结构中不同点之间的网络性能。 它还可以监视到[服务和应用程序终结点](./network-performance-monitor-service-connectivity.md)的网络连接，以及[监视 Azure ExpressRoute 的性能](./network-performance-monitor-expressroute.md)。 \n\n网络性能监视器可检测诸如流量黑洞、路由错误之类的网络问题，以及传统网络监视方法无法检测到的问题。 只要突破网络链接的阈值，解决方案就会生成警报并进行通知。 它还可以确保及时检测到网络性能问题，然后确定问题根源所在的特定网络段或设备。 \n\n可在线查看相关信息，深入了解[网络性能监视器](../../networking/network-monitoring-overview.md)支持的各种功能。\n"
sections:
- name: 安装和配置代理
  questions:
  - question: >
      NPM 进行监视所用的节点要满足哪些平台要求？
    answer: "下面列出了 NPM 各项功能所要满足的平台要求：\n\n- NPM 的性能监视器和服务连接监视器功能支持 Windows Server 和 Windows 桌面/客户端操作系统。 支持的 Windows Server OS 版本为 2008 SP1 或更高版本。 支持的 Windows 桌面/客户端版本为 Windows 10、Windows 8.1、Windows 8 和 Windows 7。 \n- NPM 的 ExpressRoute 监视器功能仅支持 Windows Server（2008 SP1 或更高版本）操作系统。\n"
  - question: >
      是否可以使用计算机作为 NPM 中的监视节点？
    answer: "使用基于 Linux 的节点监视网络的功能现已正式发布。 在[此处](../../virtual-machines/extensions/oms-linux.md)访问代理。 \n"
  - question: >
      NPM 进行监视所用的节点要满足哪些大小要求？
    answer: >
      要在节点 VM 上运行 NPM 解决方案以监视网络，节点应至少有 500 MB 内存和 1 个核心。 运行 NPM 不需要使用单独的节点。 该解决方案可以在运行了其他工作负荷的节点上运行。 在 CPU 使用率超过 5% 的情况下，该解决方案能够停止监视进程。
  - question: >
      若要使用 NPM，是要以直接代理的形式还是通过 System Center Operations Manager 连接节点？
    answer: >
      性能监视器和服务连接监视器功能都支持[以直接代理形式连接的](../agents/agent-windows.md)节点和[通过 Operations Manager 连接的](../agents/om-agents.md)节点。


      对于 ExpressRoute 监视器功能，Azure 节点只能以直接代理的形式连接。 不支持通过 Operations Manager 连接的 Azure 节点。 对于本地节点，支持使用以直接代理形式连接的节点以及通过 Operations Manager 连接的节点来监视 ExpressRoute 线路。
  - question: >
      应选择 TCP 还是 ICMP 协议进行监视？
    answer: "如果使用基于 Windows Server 的节点监视网络，我们建议使用 TCP 作为监视协议，因为它提供更好的准确性。 \n\n建议将 ICMP 用于基于 Windows 桌面/客户端操作系统的节点。 此平台不允许通过原始套接字发送 TCP 数据，NPM 使用这些套接字来发现网络拓扑。\n\n可在[此处](./network-performance-monitor-performance-monitor.md#choose-the-protocol)详细了解每个协议的相对优势。\n"
  - question: >
      如何将节点配置为支持使用 TCP 协议进行监视？
    answer: "要使节点支持使用 TCP 协议进行监视： \n* 请确保节点平台是 Windows Server（2008 SP1 或更高版本）。\n* 在该节点上运行 [EnableRules.ps1](https://aka.ms/npmpowershellscript) PowerShell 脚本。 参阅[说明](./network-performance-monitor.md#configure-log-analytics-agents-for-monitoring)了解更多详细信息。\n"
  - question: >
      如何更改 NPM 用来监视的 TCP 端口？
    answer: >
      可以运行 [EnableRules.ps1](https://aka.ms/npmpowershellscript) 脚本来更改 NPM 用来监视的 TCP 端口。 需要输入用作参数的端口号。 例如，若要在端口 8060 上启用 TCP，请运行 `EnableRules.ps1 8060`。 确保在用于监视的所有节点上使用相同的 TCP 端口。


      此脚本仅在本地配置 Windows 防火墙。 如果有网络防火墙或网络安全组 (NSG) 规则，请确保它们允许将流量发往 NPM 所用 TCP 端口。
  - question: >
      应使用多少个代理？
    answer: >
      对于要监视的每个子网，至少要使用一个代理。
  - question: >
      我可以使用的最大代理数或我会看到“...你已达到配置限制”错误的最大代理数是多少？
    answer: >
      NPM 将 IP 数限制为每个工作区 5000 个 IP。 如果某个节点同时拥有 IPv4 和 IPv6 地址，则计为该节点的 2 个 IP。 因此，此 5000 个 IP 的限制会决定代理数的上限。 可从“NPM”>>“配置”中的“节点”选项卡删除非活动代理。 NPM 还维护曾分配给托管代理的 VM 的所有 IP 的历史记录，每个IP 计为单独的 IP 并包含在 5000 个 IP 的上限中。 若要为工作区释放 IP，可使用“节点”页面删除未使用的 IP。
- name: 监视
  questions:
  - question: >
      如何计算丢包率和延迟
    answer: >
      源代理按固定间隔将 TCP SYN 请求（如果选择 TCP 作为用于监视的协议）或 ICMP ECHO 请求（如果选择 ICMP 作为用于监视的协议）发送到目标 IP，以确保涵盖源-目标 IP 组合之间的所有路径。 将测量收到的数据包百分比和数据包往返时间，以计算每个路径的丢包率和延迟。 将会基于轮询间隔和所有路径聚合此数据，以获取特定轮询间隔内 IP 组合的失包率和延迟的聚合值。
  - question: >
      源代理按哪种频率将数据包发送到目标进行监视？
    answer: >
      对于性能监视器和 ExpressRoute 监视器功能，源每隔 5 秒发送数据包，并记录网络测量值。 将会基于 3 分钟轮询间隔聚合此数据，以计算丢失率和延迟的平均值与峰值。 对于服务连接监视器功能，发送数据包进行网络测量的频率由用户在配置测试时为特定测试输入的频率确定。
  - question: >
      要发送多少个数据包进行监视？
    answer: >
      源代理在轮询中发送到目标的数据包数目是自适应性的，由我们的专属算法确定，该算法可能因网络拓扑的不同而异。 源-目标 IP 组合之间的网络路径越多，则发送的数据包数目也就越多。 系统会确保涵盖源-目标 IP 组合之间的所有路径。
  - question: >
      NPM 如何发现源与目标之间的网络拓扑？
    answer: >
      NPM 使用基于跟踪路由的专属算法来发现源与目标之间的所有路径和跃点。
  - question: "NPM 提供路由和交换级别信息 \n"
    answer: >
      尽管 NPM 可以检测源代理与目标之间所有可能的路由，但它不提供特定工作负荷发送的数据包所采用的路由的深入信息。 该解决方案可帮助识别那些超预期增大延迟的路径和底层网络跃点。
  - question: >
      为何某些路径不正常？
    answer: >
      源与目标 IP 之间可能存在不同的网络路径，而每个路径可能存在不同的丢包率和延迟值。 NPM 将这些路径标记为不正常（以红色表示），它们的失包率和/或延迟值大于监视配置中设置的相关阈值。
  - question: >
      网络拓扑图中红色的跃点表示什么？
    answer: >
      如果某个跃点为红色，表示它属于至少一个不正常的路径。 NPM 只会将路径标记为不正常，而不会隔离每个路径的运行状况。 若要识别有问题的跃点，可以查看每个跃点的延迟，并隔离那些超预期增大延迟的跃点。
  - question: >
      性能监视器中的故障定位的工作原理是什么？
    answer: >
      NPM 根据每个网络路径、网段和构成网络跃点所属的不正常路径数，使用概率机制向它们分配故障概率。 随着网段和跃点属于越来越多的不正常路径，与之关联的故障概率将会增大。 如果有许多包含 NPM 代理的节点相互连接，因此增加了用于计算故障概率的数据点，则此算法的效果最佳。
  - question: >
      哪个是针对警报的默认 Log Analytics 查询？
    answer: "性能监视器查询\n\n```kusto\nNetworkMonitoring\n | where (SubType == \"SubNetwork&quot; or SubType == &quot;NetworkPath\") \n | where (LossHealthState == \"Unhealthy\" or LatencyHealthState == \"Unhealthy\") and RuleName == \"<<your rule name>>\"\n```\n\n服务连接监视器查询\n\n```kusto\nNetworkMonitoring\n | where (SubType == \"EndpointHealth\" or SubType == \"EndpointPath\")\n | where (LossHealthState == \"Unhealthy\" or LatencyHealthState == \"Unhealthy\" or ServiceResponseHealthState == \"Unhealthy\" or LatencyHealthState == \"Unhealthy\") and TestName == \"<<your test name>>\"\n```\n\nExpressRoute 监视器查询：线路查询\n\n```kusto\nNetworkMonitoring\n | where (SubType == \"ERCircuitTotalUtilization\") and (UtilizationHealthState == \"Unhealthy\") and CircuitResourceId == \"<<your circuit resource ID>>\"\n```\n\n专用对等互连\n\n```kusto\nNetworkMonitoring\n | where (SubType == \"ExpressRoutePeering\" or SubType == \"ERVNetConnectionUtilization\" or SubType == \"ExpressRoutePath\")   \n | where (LossHealthState == \"Unhealthy\" or LatencyHealthState == \"Unhealthy\" or UtilizationHealthState == \"Unhealthy\") and CircuitName == \"<<your circuit name>>\" and VirtualNetwork == \"<<vnet name>>\"\n```\n\nMicrosoft 对等互连\n\n```kusto\nNetworkMonitoring\n | where (SubType == \"ExpressRoutePeering\" or SubType == \"ERMSPeeringUtilization\" or SubType == \"ExpressRoutePath\")\n | where (LossHealthState == \"Unhealthy\" or LatencyHealthState == \"Unhealthy\" or UtilizationHealthState == \"Unhealthy\") and CircuitName == \"\"<<your circuit name>>\" and PeeringType == \"MicrosoftPeering\"\n```\n\n常见查询\n\n```kusto\nNetworkMonitoring\n | where (SubType == \"ExpressRoutePeering\" or SubType == \"ERVNetConnectionUtilization\" or SubType == \"ERMSPeeringUtilization\" or SubType == \"ExpressRoutePath\")\n | where (LossHealthState == \"Unhealthy\" or LatencyHealthState == \"Unhealthy\" or UtilizationHealthState == \"Unhealthy\")\n```\n"
  - question: >
      NPM 是否可以将路由器和服务器作为单个设备进行监视？
    answer: >
      NPM 只能识别源与目标 IP 之间的底层网络跃点（交换机、路由器、服务器等）的 IP 和主机名。 此外，它还能识别这些已识别的跃点之间的延迟。 它不会单独监视这些底层跃点。
  - question: >
      是否可以使用 NPM 来监视 Azure 与 AWS 之间的网络连接？
    answer: >
      是。 有关详细信息，请参阅[使用 NPM 监视 Azure、AWS 和本地网络](/archive/blogs/msoms/monitor-on-premises-cloud-iaas-and-hybrid-networks-using-oms-network-performance-monitor)一文。
  - question: >
      ExpressRoute 带宽用量是指传入还是传出带宽？
    answer: >
      带宽用量是传入和传出带宽的总计。 它以“位/秒”为单位表示。
  - question: >
      是否可以获取 ExpressRoute 的传入和传出带宽信息？
    answer: "可以捕获主要和辅助带宽的传入和传出值。\n\n如需 MS 对等互连级信息，请在日志搜索中使用下面所述的查询\n\n```kusto\nNetworkMonitoring\n | where SubType == \"ERMSPeeringUtilization\"\n | project CircuitName,PeeringName,BitsInPerSecond,BitsOutPerSecond \n```\n\n如需专用对等互连级信息，请在日志搜索中使用下面所述的查询\n\n```kusto\nNetworkMonitoring\n | where SubType == \"ERVNetConnectionUtilization\"\n | project CircuitName,PeeringName,BitsInPerSecond,BitsOutPerSecond\n```\n\n如需线路级信息，请在日志搜索中使用下面所述的查询\n\n```kusto\nNetworkMonitoring\n | where SubType == \"ERCircuitTotalUtilization\"\n | project CircuitName, BitsInPerSecond, BitsOutPerSecond\n```\n"
  - question: >
      NPM 的性能监视器支持哪些区域？
    answer: >
      NPM 可以通过某个[受支持区域](./network-performance-monitor.md#supported-regions)中托管的工作区，监视全球任意位置的网络之间的连接
  - question: >
      NPM 的服务连接监视器支持哪些区域？
    answer: >
      NPM 可以通过某个[受支持区域](./network-performance-monitor.md#supported-regions)中托管的工作区，监视全球任意位置的服务的连接
  - question: >
      NPM 的 ExpressRoute 监视器支持哪些区域？
    answer: >
      NPM 可以监视任何 Azure 区域中的 ExpressRoute 线路。 若要载入到 NPM，必须需要某个[受支持区域](../../expressroute/how-to-npm.md)中托管的 Log Analytics 工作区
- name: 故障排除
  questions:
  - question: >
      网络拓扑视图中为何有些跃点标记为不可识别？
    answer: "NPM 使用跟踪路由的修改版来发现从源代理到目标的拓扑。 不可识别的跃点表示该网络跃点未响应源代理的跟踪路由请求。 如果三个连续的网络跃点未响应代理的跟踪路由，解决方案会将无响应的跃点标记为不可识别，且不会尝试发现其他跃点。\n\n如果存在以下一种或多种情况，跃点可能不会响应跟踪路由：\n\n* 路由器已配置为隐藏其标识。\n* 网络设备不允许 ICMP_TTL_EXCEEDED 流量。\n* 防火墙阻止了来自网络设备的 ICMP_TTL_EXCEEDED 响应。\n\n当任一终结点位于 Azure 中时，traceroute 会显示无法识别的跃点，因为 Azure 基础结构不会向 traceroute 透露标识。 \n"
  - question: >
      我收到测试运行不正常的警报，但在 NPM 的丢失和延迟图中并没有看到过高的值。 如何查看运行不正常的项目？
    answer: "如果源和目标之间的端到端延迟超过其间的任何路径的阈值，NPM 会引发警报。 某些网络有多个路径连接相同的源和目标。 如果任何路径不正常，NPM 会引发警报。 图中看到的丢失和延迟是所有路径的平均值，因此可能无法表现单个路径的具体值。 若要了解超出阈值的位置，请查看警报中的“SubType”列。 如果问题是某个路径导致的，则 SubType 值为 NetworkPath（适用于性能监视器测试）、EndpointPath（适用于服务连接监视器测试）和 ExpressRoutePath（适用于 ExpressRotue 监视器测试）。 \n\n用于了解路径是否正常的示例查询：\n\n```kusto\nNetworkMonitoring\n | where ( SubType == \"ExpressRoutePath\")\n | where (LossHealthState == \"Unhealthy\" or LatencyHealthState == \"Unhealthy\" or UtilizationHealthState == \"Unhealthy\") and CircuitResourceID ==\"<your ER circuit ID>\" and ConnectionResourceId == \"<your ER connection resource id>\"\n | project SubType, LossHealthState, LatencyHealthState, MedianLatency\n```\n"
  - question: "为何测试显示运行不正常，而拓扑不这么显示 \n"
    answer: "NPM 按不同的时间间隔监视端到端丢包、延迟和拓扑。 丢包和延迟每 5 秒钟度量一次，每三分钟聚合一次（适用于性能监视器和 ExpressRoute 监视器），而拓扑则使用 traceroute 每 10 分钟计算一次。 例如，在 3:44 到 4:04 之间，拓扑可能更新了三次（3:44、3:54、4:04），但丢包和延迟更新了大约七次（3:44、3:47、3:50、3:53、3:56、3:59、4:02）。 在 3:54 生成的拓扑会针对在 3:56、3:59 和 4:02 计算的丢包和延迟呈现。 假设你获得一个警报，指出你的 ER 线路在 3:59 不正常。 你登录到 NPM，尝试将拓扑时间设置为 3:59。 NPM 会呈现在 3:54 生成的拓扑。 若要了解网络的上一个已知拓扑，请 将字段 TimeProcessed（计算丢包和延迟的时间）与 TracerouteCompletedTime（计算拓扑的时间）进行比较。 \n"
  - question: >
      在 NetworkMonitoring 表中，字段 E2EMedianLatency 和 AvgHopLatencyList 的差异是什么
    answer: >
      E2EMedianLatency 是在聚合 tcp ping 测试的结果后每三分钟更新一次的延迟，而 AvgHopLatencyList 则根据 traceroute 每 10 分钟更新一次。 若要了解计算 E2EMedianLatency 的具体时间，请使用 TimeProcessed 字段。 若要了解完成 traceroute 并更新 AvgHopLatencyList 的具体时间，请使用 TracerouteCompletedTime 字段
  - question: "为何逐跳延迟数不同于 HopLatencyValue \n"
    answer: >
      HopLatencyValue 是从源到终结点的。

      例如：跃点 - A、B、C。 AvgHopLatency - 10、15、20。 这意味着源到 A 的延迟为 10，源到 B 的延迟为 15，源到 C 的延迟为 20。 UI 会将拓扑中 A-B 跃点的延迟计算为 5
  - question: >
      解决方案会显示 100% 的丢包率，但源与目标之间已建立连接
    answer: "如果主机防火墙或中间防火墙（网络防火墙或 Azure NSG）阻止了源代理与目标之间通过 NPM 用于监视的端口（端口默认为 8084，除非客户更改了端口）进行的通信，则可能会发生这种情况。\n\n* 若要确认主机防火墙是否未阻止所需端口上的通信，请通过以下视图查看源和目标节点的运行状况：“网络性能监视器”->“配置”->“节点”。 \n  如果这些节点不正常，请查看说明并采取纠正措施。 如果节点正常，请转到下面的 使用。\n* 若要确认中间网络防火墙或 Azure NSG 是否未阻止所需端口上的通信，请遵照下面的说明使用第三方 PsPing 实用工具：\n  * 可从[此处](/sysinternals/downloads/psping)获取 psping 实用工具。 \n  * 在源节点中运行以下命令。\n    * psping -n 15 \\<destination node IPAddress\\>:portNumber 默认情况下，NPM 使用 8084 端口。 如果使用 EnableRules.ps1 脚本显式更改了此端口，请输入所用的自定义端口号。 这是从 Azure 机器向本地执行的 ping\n* 检查 ping 是否成功。 如果未成功，则表示中间网络防火墙或 Azure NSG 阻止了此端口上的流量。\n* 现在，从目标节点向源节点 IP 运行该命令。\n"
  - question: >
      从节点 A 到 B 的通信发生了丢包，但从节点 B 到 A 的通信未发生丢包，这是为什么？
    answer: >
      由于从 A 到 B 之间的网络路径可能不同于从 B 到 A 之间的网络路径，因此，可能会观察到不同的丢包率和延迟值。
  - question: >
      为何发现不了我的所有 ExpressRoute 线路和对等互连？
    answer: >
      NPM 现在可以在用户有权访问的所有订阅中发现 ExpressRoute 线路和对等连接。 选择链接 Express Route 资源的所有订阅，并为发现的每个资源启用监视。 NPM 在发现专用对等互连时查找连接对象，因此请检查 VNET 是否与对等互连关联。 NPM 不检测与 Log Analytics 工作区所在租户不同的租户中的线路和对等互连。
  - question: >
      ER 监视器功能发出了诊断消息“流量无法通过任何线路”。 这是什么意思？
    answer: "可能存在这种情况：本地与 Azure 节点之间建立了正常的连接，但流量不能通过配置为由 NPM 监视的 ExpressRoute 线路。 \n\n在以下情况下可能发生这种问题：\n\n* ER 线路已关闭。\n* 路由筛选器的配置使得其他路由（例如 VPN 连接或其他 ExpressRoute 线路）的优先级高于所需的 ExpressRoute 线路。 \n* 监视配置中选择用来监视 ExpressRoute 线路的本地和 Azure 节点未通过所需的 ExpressRoute 线路相互建立连接。 确保选择正确的节点，并通过所要监视的 ExpressRoute 线路让它们相互建立连接。\n"
  - question: >
      为什么 ExpressRoute Monitor 在我的线路/对等互连可用并传递数据时将其报告为运行不正常。
    answer: >
      ExpressRoute 监视器会将代理/服务报告的网络性能值（丢失、延迟和带宽使用率）与配置过程中设置的阈值进行比较。 对于一条线路，如果所报告的带宽使用率超过配置中设置的阈值，该线路就会被标记为运行不正常。 对于对等互连，如果所报告的丢失、延迟或带宽使用率超过配置中设置的阈值，该对等互连就会被标记为运行不正常。 NPM 不利用指标或任何其他形式的数据来决定运行状况状态。
  - question: >
      为什么 ExpressRoute 监视器的带宽使用率报告的值不同于传入/传出位指标
    answer: >
      对于 ExpressRoute 监视器，带宽使用率是过去 20 分钟内传入和传出带宽的平均值，表示为“位/秒”。对于 Express Route 指标，传入/传出位是每分钟数据点。用于这两者的数据集在内部是相同的，但聚合在 NPM 和 ER 指标之间会有所不同。 为了能够按分钟进行精确监视和快速发出警报，建议直接依据 ER 指标来设置警报
  - question: >
      为 ExpressRoute 线路配置监视时，并未检测 Azure 节点。
    answer: >
      如果 Azure 节点是通过 Operations Manager 连接的，则可能发生这种情况。 ExpressRoute 监视器功能仅支持以直接代理形式连接的 Azure 节点。
  - question: >
      无法在 OMS 门户中发现 ExpressRoute 线路
    answer: "尽管在 Azure 门户和 OMS 门户中都可以使用 NPM，但 ExpressRoute 监视器中的线路发现功能只能通过 Azure 门户执行。 通过 Azure 门户发现线路后，可在上述任一门户中使用该功能。 \n"
  - question: >
      在服务连接监视器功能中，服务响应时间、网络丢包和延迟显示为“不适用”
    answer: >
      如果存在以下一种或多种情况，则可能会发生此问题：


      * 服务已关闭。

      * 用来检查服务的网络连接的节点已关闭。

      * 在测试配置中输入的目标不正确。

      * 节点未建立任何网络连接。
  - question: >
      在服务连接监视器功能中，有效服务响应时间已显示，但网络丢包和延迟显示为“不适用”
    answer: >
      如果存在以下一种或多种情况，则可能会发生此问题：


      * 如果用来检查服务的网络连接的节点是 Windows 客户端计算机，则原因是目标服务正在阻止 ICMP 请求，或者网络防火墙正在阻止 ICMP 来自该节点的请求。

      * 在测试配置中，“执行网络测量”复选框为空。
  - question: >
      在服务连接监视器功能中，服务响应时间为“不适用”，但网络丢包和延迟有效
    answer: >
      如果目标服务不是 Web 应用程序，但测试配置为 Web 测试，则可能会发生这种情况。 编辑测试配置，选择“网络”而不是“Web”作为测试类型。
- name: 其他
  questions:
  - question: >
      用于监视的节点的性能是否受影响？
    answer: >
      NPM 进程配置为当它的主机 CPU 资源利用率超过 5% 时停止。 这是为了确保可以持续使用这些节点来处理其常规工作负荷，而不会影响性能。
  - question: >
      NPM 是否会编辑用于监视的防火墙规则？
    answer: >
      NPM 只在运行 EnableRules.ps1 PowerShell 脚本的节点上创建本地 Windows 防火墙规则，以允许代理在指定的端口上建立彼此之间的 TCP 连接。 该解决方案不会修改任何网络防火墙或网络安全组 (NSG) 规则。
  - question: >
      如何检查用于监视的节点的运行状况？
    answer: >
      可通过以下视图查看用于监视的节点的运行状况：“网络性能监视器”->“配置”->“节点”。 如果某个节点不正常，可以查看错误详细信息并采取建议的措施。
  - question: >
      NPM 是否可以微秒为单位报告延迟数字？
    answer: >
      NPM 在 UI 中以毫秒为单位将延迟数字四舍五入。 相同的数据将以更高的粒度存储（精确度有时可高达四位小数）。
  - question: "NPM 是否支持多宿主节点？ \n"
    answer: "否。 每个 NPM 节点都需要一个专用日志分析作区。 \n"
  - question: >
      NPM 对 Linux 有什么其他要求？
    answer: "适用于 Linux 的 OMS 代理还要求使用 GLIBC 2.14 或更高版本。 \n"
additionalContent: "\n## <a name=\"next-steps\"></a>后续步骤\n\n- 参阅 [Azure 中的网络性能监视器解决方案](./network-performance-monitor.md)来详细了解网络性能监视器。"
