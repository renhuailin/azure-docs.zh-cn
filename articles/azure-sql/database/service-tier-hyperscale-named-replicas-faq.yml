### YamlMime:FAQ
metadata:
  title: Azure SQL 数据库超大规模命名副本常见问题解答
  description: 对客户关于“超大规模”命名副本提出的常见问题的回答
  services: sql-database
  ms.service: sql-database
  ms.subservice: service-overview
  ms.custom: 
  ms.devlang: 
  ms.topic: conceptual
  author: yorek
  ms.author: damauri
  ms.reviewer: 
  ms.date: 07/27/2021
  ms.openlocfilehash: 223873b80235c9a8734d0b7d6c3a04781e202a4d
  ms.sourcegitcommit: 0046757af1da267fc2f0e88617c633524883795f
  ms.translationtype: HT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 08/13/2021
  ms.locfileid: "121722908"
title: Azure SQL 数据库超大规模命名副本常见问题解答
summary: >
  [!INCLUDE[appliesto-sqldb](../includes/appliesto-sqldb.md)]


  本常见问题解答适用于对“超大规模”[命名副本](service-tier-hyperscale-replicas.md#named-replica-in-preview)有大致了解并希望其具体问题得到解答的读者。
sections:
- name: 一般问题
  questions:
  - question: >
      Can a named replica be used as a failover target?
    answer: >
      No, named replicas cannot be used as failover targets for the primary replica. Add HA replicas for that purpose.
  - question: >
      How can I distribute a read-only workload across my named replicas?
    answer: >
      Since every named replica may have a different service level objective and thus be used for different use cases, there is no built-in way to direct read-only traffic sent to the primary to a set of named replicas. For example, you may have eight named replicas, and you may want to direct OLTP workload only to named replicas 1 to 4, while all the Power BI analytical workloads will use named replicas 5 and 6 and the data science workload will use replicas 7 and 8. Depending on which tool or programming language you use, strategies to distribute such workload may vary. One example of creating a workload routing solution to allow a REST backend to scale out is here: [OLTP scale-out sample](https://github.com/Azure-Samples/azure-sql-db-named-replica-oltp-scaleout).
  - question: >
      Can a named replica be in a region different from the region of the primary replica?
    answer: >
      No, as named replicas use the same page servers of the primary replica, they must be in the same region.
  - question: >
      Can a named replica impact availability or performance of the primary replica?
    answer: >
      A named replica cannot impact the availability of the primary replica. Named replicas, under normal circumstances, are unlikely to impact the primary's performance, but it can happen if there are intensive workloads running. Just like an HA replica, a named replica is kept in sync with the primary via the transaction log service. If a named replica, for any reason, is not able to consume the transaction log fast enough, it will start asking the primary replica to slow down (throttle) its log generation, so that it can catch up. While this behavior will not impact the primary's availability, it may impact performance of write workloads on the primary. To avoid this situation, make sure that your named replicas have enough resource headroom – mainly CPU – to process transaction log without delay. For example, if the primary is processing numerous data changes, it is recommended to have named replicas with at least the same Service Level Objective as the primary, to avoid saturating CPU on the replicas and thus forcing the primary to slow down.
  - question: >
      What happens to named replicas if the primary replica is unavailable, for example because of planned maintenance?
    answer: >
      Named replicas will still be available for read-only access, as usual.
  - question: >
      How do I validate if I have successfully connected to secondary compute replica using SQL Server Management Studio (SSMS) or other client tools?
    answer: >
      You can execute the following T-SQL query. The database context must be set to the name of the Hyperscale database, not to the `master` database.


      ```sql

      SELECT @@SERVERNAME AS logical_server_name, DB_NAME() AS database_name, DATABASEPROPERTYEX(DB_NAME(), 'Updateability') AS replica_updateability;

      ```


      `replica_updateability` will be `READ_ONLY` if you are connected to a read-only secondary replica, and `READ_WRITE` if you are connected to the primary replica.
  - question: >
      Can I create any objects or indexes on my secondary compute replicas?
    answer: >
      No. Hyperscale databases have shared storage, meaning that all compute replicas see the same tables, indexes, views, etc. If you want additional indexes optimized for reads on secondary, you must add them on the primary.


      You can still create temporary tables (table names prefixed with # or ##) on each secondary replica to store temporary data. Temporary tables are read-write.
  - question: >
      How much delay is there between the primary and secondary compute replicas?
    answer: >
      Data latency from the time a transaction is committed on the primary to the time it is readable on a secondary depends on current log generation rate, transaction size, load on the replica, and other factors. Typical data latency for small transactions is in tens of milliseconds, however there is no upper bound on data latency. Data on a given secondary replica is always transactionally consistent. However, at a given point in time data latency may be different for different secondary replicas. Workloads that need to read committed data immediately should run on the primary replica.
  - question: >
      How can I improve availability of named replicas?
    answer: >
      By default, named replicas do not have any HA replicas of their own. A failover of a named replica requires creating a new replica first, which typically takes about 1-2 minutes. However, named replicas can also benefit from higher availability and shorter failovers provided by HA replicas. To add HA replicas for a named replica, you can use the parameter `ha-replicas` with [AZ CLI](/cli/azure/sql/db/replica?view=azure-cli-latest#az_sql_db_replica_create), or the parameter `HighAvailabilityReplicaCount` with [PowerShell](/powershell/module/az.sql/set-azsqldatabase), or the `highAvailabilityReplicaCount` property with [REST API](/rest/api/sql/2021-02-01-preview/databases/create-or-update). The number of HA replicas can be set during the creation of a named replica and can be changed – only via AZ CLI, PowerShell or REST API – anytime after the named replica has been created. Pricing of HA replicas for named replicas is the same of HA replicas for regular Hyperscale databases.
additionalContent: "\n## Next steps\n\nFor more information about the Hyperscale service tier, see [Hyperscale service tier](service-tier-hyperscale.md).\nFor more information about the Hyperscale replicas, see [Hyperscale Replicas](service-tier-hyperscale-replicas.md)."
