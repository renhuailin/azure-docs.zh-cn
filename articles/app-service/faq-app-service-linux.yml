### YamlMime:FAQ
metadata:
  title: 运行内置容器常见问题解答
  description: 查找有关 Azure 应用服务中内置 Linux 容器的常见问题的解答。
  keywords: azure app service, web app, faq, linux, oss, web app for containers, multi-container, multicontainer
  author: msangapu-msft
  ms.topic: article
  ms.service: app-service
  ms.date: 10/30/2018
  ms.author: msangapu
  ms.custom: seodec18
  ms.openlocfilehash: b908a804041d2278be5e9f88b23c7fe160511fe6
  ms.sourcegitcommit: 05dd6452632e00645ec0716a5943c7ac6c9bec7c
  ms.translationtype: HT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 08/17/2021
  ms.locfileid: "122253234"
title: Linux 上的 Azure 应用服务常见问题解答
summary: >
  随着 Linux 应用服务的发布，我们正在努力添加功能和改进我们的平台。 本文提供客户最近提出的问题的解答。


  如果你有问题，请对本文发表评论。
sections:
- name: 内置映像
  questions:
  - question: >
      我想对平台提供的内置 Docker 容器进行分叉。 在哪里可以找到这些文件？
    answer: "可以在 [GitHub](https://github.com/Azure-App-Service/ImageBuilder) 上找到所有 Docker 文件。\n          \n"
  - question: >
      配置运行时堆栈时，“启动文件”部分的所需值是什么？
    answer: >
      | 堆栈           | 预期值                                                                         |

      |-----------------|----------------------------------------------------------------------------------------|

      | Java SE         | 用于启动 JAR 应用的命令（例如 `java -jar /home/site/wwwroot/app.jar --server.port=80`） |

      | Tomcat          | 用于执行任何所需配置的脚本的位置（例如 `/home/site/deployments/tools/startup_script.sh`）          |

      | Node.js         | PM2 配置文件或脚本文件                                |

      | .NET Core       | 编译后的 DLL 名称为 `dotnet <myapp>.dll`                                 |

      | PHP             | [自定义启动](./configure-language-php.md?pivots=platform-linux#customize-start-up)（可选） |

      | Python          | [启动脚本](./configure-language-python.md#customize-startup-command)（可选） |

      | Ruby            | 要用于初始化你的应用的 Ruby 脚本                        |


      这些命令或脚本会在内置 Docker 容器启动之后但在应用程序代码启动之前执行。
- name: 管理
  questions:
  - question: >
      在 Azure 门户中按下“重启”按钮时，会发生什么情况？
    answer: >
      此操作等同于 Docker 重启。
  - question: >
      可以使用安全外壳 (SSH) 连接到应用容器虚拟机 (VM) 吗？
    answer: >
      是的，可以通过源代码管理 (SCM) 站点实现此操作。


      > [!NOTE]

      > 还可以使用 SSH、SFTP 或 Visual Studio Code（用于实时调试 Node.js 应用）直接从本地开发计算机连接到应用容器。 有关详细信息，请参阅[远程调试和通过 SSH 登录到 Linux 上的应用服务](https://azure.github.io/AppService/2018/05/07/New-SSH-Experience-and-Remote-Debugging-for-Linux-Web-Apps.html)。

      >
  - question: >
      如何通过 SDK 或 Azure 资源管理器模板创建 Linux 应用服务计划？
    answer: >
      应将应用服务的“保留”字段设置为“true”。
- name: 持续集成和持续部署
  questions:
  - question: >
      更新 Docker Hub 上的映像后，我的 Web 应用仍使用旧的 Docker 容器映像。 是否支持自定义容器的持续集成和部署？
    answer: >
      支持，若要设置 Azure 容器注册表或 DockerHub 的持续集成/部署，请查阅以下文章：[使用用于容器的 Web 应用进行持续部署](./deploy-ci-cd-custom-container.md)。 对于专用注册表，可以通过先停止然后启动 Web 应用来刷新容器。 或者，可以更改或添加虚拟应用程序设置，从而强制刷新容器。
  - question: >
      是否支持过渡环境？
    answer: >
      是的。
  - question: >
      是否可以使用“WebDeploy/MSDeploy”来部署 Web 应用？
    answer: >
      可以，需要将名为 `WEBSITE_WEBDEPLOY_USE_SCM` 的应用设置设置为 *false*。
  - question: >
      使用 Linux Web 应用时，应用程序的 Git 部署失败。 如何解决此问题？
    answer: >
      如果 Linux Web 应用的 Git 部署失败，可选择以下选项之一部署应用程序代码：


      - 使用持续交付（预览版）功能：可将应用的源代码存储在 Azure DevOps Git 存储库或 GitHub 存储库中，以使用 Azure 持续交付。 有关详细信息，请参阅[如何为 Linux Web 应用配置持续交付](https://blogs.msdn.microsoft.com/devops/2017/05/10/use-azure-portal-to-setup-continuous-delivery-for-web-app-on-linux/)。


      - 使用 [ZIP 部署 API](https://github.com/projectkudu/kudu/wiki/Deploying-from-a-zip-file)：若要使用此 API，请[通过 SSH 连接到 Web 应用](configure-linux-open-ssh-session.md)，并转到要在其中部署代码的文件夹。 运行以下代码：

         ```bash
         curl -X POST -u <user> --data-binary @<zipfile> https://{your-sitename}.scm.azurewebsites.net/api/zipdeploy
         ```

         如果有错误指出找不到 `curl` 命令，请确保在运行前一条 `curl` 命令之前使用 `apt-get install curl` 安装 curl。
- name: 语言支持
  questions:
  - question: >
      我想要在 Node.js 应用程序中使用 Web 套接字，要设置什么特殊设置或配置吗？
    answer: >
      需要，请在服务器端 Node.js 代码中禁用 `perMessageDeflate`。 例如，如果要使用 socket.io，请使用以下代码：


      ```nodejs

      const io = require('socket.io')(server,{

        perMessageDeflate :false

      });

      ```
  - question: >
      是否支持未编译的 .NET Core 应用？
    answer: >
      是的。
  - question: >
      是否支持将 Composer 用作 PHP 应用的依赖关系管理器？
    answer: >
      支持，在 Git 部署过程中，Kudu 应检测到正在部署 PHP 应用程序（这得益于 composer.lock 文件的存在），然后触发 composer 安装。
- name: 自定义容器
  questions:
  - question: >
      从 ACR 拉取映像时，能否将托管标识与应用服务一起使用？
    answer: >
      可以，可在 Azure CLI 中找到此功能。 可以使用[系统分配的](https://github.com/Azure/app-service-linux-docs/blob/master/HowTo/use_system-assigned_managed_identities.md)或[用户分配的](https://github.com/Azure/app-service-linux-docs/blob/master/HowTo/use_user-assigned_managed_identities.md)标识。 Azure 门户中目前不支持此功能。
  - question: >
      我使用的是我自己的自定义容器。 我希望平台将 SMB 共享装载到 `/home/` 目录。
    answer: >
      如果未指定 `WEBSITES_ENABLE_APP_SERVICE_STORAGE` 设置，或者将其指定为 false，则 `/home/` 目录不会在缩放实例之间共享，且写入的文件在重启后不会保留 。 将 `WEBSITES_ENABLE_APP_SERVICE_STORAGE` 显式设置为 true 会启用装载。
  - question: >
      自定义容器需要很长时间才能启动，并且平台在它完成启动之前便重启了容器。
    answer: >
      可以配置该平台在重启容器之前的等待时间。 为此，可将 `WEBSITES_CONTAINER_START_TIME_LIMIT` 应用设置设为所需的值。 默认值为 230 秒，最大值为 1800 秒。
  - question: >
      专用注册表服务器 URL 的格式是什么？
    answer: >
      提供完整注册表 URL，包括 `http://` 或 `https://`。
  - question: >
      专用注册表选项中的映像名称的格式是什么？
    answer: >
      添加完整映像名称，包括专用注册表 URL（例如 myacr.azurecr.io/dotnet:latest）。 使用自定义端口的映像名称[无法通过门户输入](https://feedback.azure.com/forums/169385-web-apps/suggestions/31304650)。 若要设置 `docker-custom-image-name`，请使用 [`az` 命令行工具](/cli/azure/webapp/config/container#az_webapp_config_container_set)。
  - question: >
      是否可以在自定义容器映像上公开多个端口？
    answer: >
      不支持公开多个端口。
  - question: >
      可以自带存储吗？
    answer: >
      可以，[自带存储](./configure-connect-to-azure-storage.md)以预览版形式提供。
  - question: >
      为何无法从 SCM 站点浏览自定义容器的文件系统或正在运行的进程？
    answer: >
      SCM 站点在单独的容器中运行。 用户无法查看应用容器的文件系统或正在运行的进程。
  - question: >
      我的自定义容器侦听除端口 80 以外的端口。 如何配置我的应用将请求路由到该端口？
    answer: >
      我们提供自动端口检测。 也可以指定名为 *WEBSITES_PORT* 的应用设置，并为其提供所需的端口号值。 以前，平台使用 *PORT* 应用设置。 我们计划弃用此应用设置，改为独占使用 *WEBSITES_PORT*。
  - question: >
      是否需要在自定义容器中实现 HTTPS？
    answer: >
      不需要，平台会处理共享前端上的 HTTPS 终止。
  - question: >
      是否需要在代码中为内置容器使用 PORT 变量？
    answer: >
      不需要，由于有自动端口检测，PORT 变量并不是必需的。 如果未检测到端口，则默认使用端口 80。

      若要手动配置自定义端口，请使用 Dockerfile 中的 EXPOSE 说明和应用设置 WEBSITES_PORT，其中包含要在容器上绑定的端口值。
  - question: >
      是否需要将 WEBSITES_PORT 用于自定义容器？
    answer: >
      是的，这是自定义容器所必需的。 若要手动配置自定义端口，请使用 Dockerfile 中的 EXPOSE 说明和应用设置 WEBSITES_PORT，其中包含要在容器上绑定的端口值。
  - question: >
      在 Docker 映像中使用 ASPNETCORE_URLS？
    answer: >
      是，可以在 .NET core 应用启动之前覆盖环境变量。

      例如 在 init.sh 脚本中：导出 ASPNETCORE_URLS={Your value}
- name: 多容器与 Docker Compose 结合使用
  questions:
  - question: "如何将 Azure 容器注册表 (ACR) 配置为用于多容器？ \n"
    answer: >
      若要将 ACR 用于多容器，**所有容器映像** 都必须托管在同一台 ACR 注册表服务器上。 在将它们托管在同一台注册表服务器上之后，需要创建应用程序设置，然后更新 Docker Compose 配置文件，使之包含 ACR 映像名称。


      创建以下应用程序设置：


      - DOCKER_REGISTRY_SERVER_USERNAME

      - DOCKER_REGISTRY_SERVER_URL（完整 URL，例如：`https://<server-name>.azurecr.io`）

      - DOCKER_REGISTRY_SERVER_PASSWORD（在 ACR 设置中启用管理员访问权限）


      在配置文件内引用 ACR 映像，如下例所示：


      ```yaml

      image: <server-name>.azurecr.io/<image-name>:<tag>

      ```
  - question: >
      怎么知道哪个容器可以访问 Internet？
    answer: >
      - 只能打开一个容器进行访问

      - 只能访问端口 80 和 8080（公开的端口）


      以下规则用于确定哪个容器可供访问 — 按优先顺序排列：


      - 设置为容器名称的应用程序设置 `WEBSITES_WEB_CONTAINER_NAME`

      - 第一个定义端口 80 或 8080 的容器

      - 如果以上规则均不适用，则文件中定义的第一个容器将可供访问（公开）


      ## <a name="web-sockets"></a>Web 套接字


      Linux 应用支持 Web 套接字。


      > [!IMPORTANT]

      > 免费应用服务计划中的 Linux 应用目前不支持 Web 套接字。 我们正在努力消除此限制，并计划在免费应用计划中最多支持 5 个 Web 套接字连接。
- name: 定价和 SLA
  questions:
  - question: >
      服务正式版的定价是多少？
    answer: >
      定价因 SKU 和区域而异，但你可以在我们的定价页上查看更多详细信息：[应用服务定价](https://azure.microsoft.com/pricing/details/app-service/linux/)。
- name: 其他问题
  questions:
  - question: >
      是否可以将基于文件的数据库（如 SQLight）与 Linux Web 应用一起使用？
    answer: >
      应用程序的文件系统是已装载的网络共享。 这允许横向扩展方案，即代码需要在多个主机上执行。 遗憾的是，这会阻止使用基于文件的数据库提供程序（如 SQLite），因为无法获取数据库文件上的排他锁。 推荐使用 Azure 中的完全托管数据库服务：[Azure SQL](https://azure.microsoft.com/products/azure-sql/)、[Azure Database for MySQL](https://azure.microsoft.com/services/mysql/) 或 [Azure Database for PostgreSQL](https://azure.microsoft.com/services/postgresql/)
  - question: >
      应用程序设置名称中支持的字符有哪些？
    answer: >
      应用程序设置只能使用字母（A-Z、a-z）、数字 (0-9) 和下划线字符 (_)。
  - question: >
      可在何处请求新功能？
    answer: >
      可以在 [Web 应用反馈论坛](https://aka.ms/webapps-uservoice)提交看法。 请将“[Linux]”添加到建议的标题中。
additionalContent: "\n## <a name=\"next-steps\"></a>后续步骤\n\n- [什么是 Linux 上的 Azure 应用服务？](overview.md#app-service-on-linux)\n- [设置 Azure 应用服务中的过渡环境](deploy-staging-slots.md)\n- [使用用于容器的 Web 应用进行持续部署](./deploy-ci-cd-custom-container.md)\n- [应掌握的内容：Web 应用和 Linux](https://techcommunity.microsoft.com/t5/apps-on-azure/things-you-should-know-web-apps-and-linux/ba-p/392472)\n- [环境变量和应用设置参考](reference-app-settings.md)"
